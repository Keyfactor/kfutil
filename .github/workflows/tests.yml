name: go tests

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Set up private repo access for go get
        run: |
          git config --global url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"
        env:
          GITHUB_TOKEN: ${{ secrets.V2BUILDTOKEN }}
      - name: Install dependencies
        run: go mod download && go mod tidy
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        version: [ 10_5_0, 11_1_2, 12_2_0 ]
        test_type: [ StoreTypes, Stores, PAM, AKV_PAM ]
        include:
          - version: 10_5_0
            test_type: StoreTypes
            SECRET_NAME: "command-config-1050-clean"
            KEYFACTOR_HOSTNAME: "int1050-test-clean.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 10_5_0
            test_type: Stores
            SECRET_NAME: "command-config-1050"
            KEYFACTOR_HOSTNAME: "integrations1050-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 10_5_0
            test_type: PAM
            SECRET_NAME: "command-config-1050"
            KEYFACTOR_HOSTNAME: "integrations1050-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 10_5_0
            test_type: AKV_PAM
            SECRET_NAME: "command-config-1050-az"
          - version: 11_1_2
            test_type: StoreTypes
            SECRET_NAME: "command-config-1112-clean"
            KEYFACTOR_HOSTNAME: "int1112-test-clean.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 11_1_2
            test_type: Stores
            SECRET_NAME: "command-config-1112"
            KEYFACTOR_HOSTNAME: "integrations1112-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 11_1_2
            test_type: PAM
            SECRET_NAME: "command-config-1112"
            KEYFACTOR_HOSTNAME: "integrations1112-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 11_1_2
            test_type: AKV_PAM
            SECRET_NAME: "command-config-1112-az"
          - version: 12_2_0
            test_type: StoreTypes
            SECRET_NAME: "command-config-1220-clean"
            KEYFACTOR_HOSTNAME: "int1220-test-clean.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 12_2_0
            test_type: Stores
            SECRET_NAME: "command-config-1220"
            KEYFACTOR_HOSTNAME: "integrations1220-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 12_2_0
            test_type: PAM
            SECRET_NAME: "command-config-1220"
            KEYFACTOR_HOSTNAME: "integrations1220-lab.kfdelivery.com"
            KEYFACTOR_DOMAIN: "command"
          - version: 12_2_0
            test_type: AKV_PAM
            SECRET_NAME: "command-config-1220-az"
    env:
      GITHUB_TOKEN: ${{ secrets.V2BUILDTOKEN }}
      KEYFACTOR_USERNAME: ${{ secrets.LAB_USERNAME }}
      KEYFACTOR_PASSWORD: ${{ secrets.LAB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up private repo access for go get
        run: |
          git config --global url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"
      - name: Run tests
        run: |
          if [ "${{ matrix.test_type }}" == "StoreTypes" ]; then
            export KFUTIL_DEBUG=1
            go test -v ./cmd -run "^Test_StoreTypes*"
          elif [ "${{ matrix.test_type }}" == "Stores" ]; then
            go test -v ./cmd -run "^Test_Stores_*"
          elif [ "${{ matrix.test_type }}" == "PAM" ]; then
            unset KFUTIL_DEBUG
            go test -v ./cmd -run "^Test_PAM*"
          elif [ "${{ matrix.test_type }}" == "AKV_PAM" ]; then
            . ./examples/auth/akv/akv_auth.sh
            cat $HOME/.keyfactor/command_config.json
            make install
            go test -v ./cmd -run "^Test_PAM*"
          fi