[
  {
    "BlueprintAllowed": false,
    "Capability": "AKV",
    "CustomAliasAllowed": "Optional",
    "EntryParameters": [],
    "JobProperties": [],
    "LocalStore": false,
    "Name": "Azure Keyvault",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "Properties": [
      {
        "Name": "TenantId",
        "DisplayName": "Tenant Id",
        "Type": "String",
        "DependsOn": "",
        "Required": false
      },
      {
        "Name": "SkuType",
        "DisplayName": "SKU Type",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "standard,premium",
        "Required": false
      },
      {
        "Name": "VaultRegion",
        "DisplayName": "Vault Region",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "eastus,eastus2,westus2,westus3,westus",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Cloud",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "public,china,government",
        "Required": false
      },
      {
        "Name": "PrivateEndpoint",
        "DisplayName": "Private KeyVault Endpoint",
        "Type": "String",
        "DependsOn": "",
        "Required": false
      }
    ],
    "ServerRequired": true,
    "ShortName": "AKV",
    "StorePathType": "",
    "StorePathValue": "",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    }
  },
  {
    "Name": "AWS Certificate Manager",
    "ShortName": "AWS-ACM",
    "Capability": "AWS-ACM",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "UseEC2AssumeRole",
        "DisplayName": "Assume new Account / Role in EC2",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "UseOAuth",
        "DisplayName": "Use OAuth 2.0 Provider",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "UseIAM",
        "DisplayName": "Use IAM User Auth",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "EC2AssumeRole",
        "DisplayName": "AWS Role to Assume (EC2)",
        "Type": "String",
        "DependsOn": "UseEC2AssumeRole",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "OAuthScope",
        "DisplayName": "OAuth Scope",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "OAuthGrantType",
        "DisplayName": "OAuth Grant Type",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "client_credentials",
        "Required": false
      },
      {
        "Name": "OAuthUrl",
        "DisplayName": "OAuth Url",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "https://***/oauth2/default/v1/token",
        "Required": false
      },
      {
        "Name": "IAMAssumeRole",
        "DisplayName": "AWS Role to Assume (IAM)",
        "Type": "String",
        "DependsOn": "UseIAM",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "OAuthAssumeRole",
        "DisplayName": "AWS Role to Assume (OAuth)",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ExternalId",
        "DisplayName": "sts:ExternalId",
        "Type": "String",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "AWS Region",
        "DisplayName": "AWS Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Akamai Certificate Provisioning Service",
    "ShortName": "Akamai",
    "Capability": "Akamai",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": false
    },
    "Properties": [
      {
        "StoreTypeId;omitempty": 0,
        "Name": "access_token",
        "DisplayName": "Access Token",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "client_token",
        "DisplayName": "Client Token",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "client_secret",
        "DisplayName": "Client Secret",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "StoreTypeId;omitempty": 0,
        "Name": "EnrollmentId",
        "DisplayName": "Enrollment ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "ContractId",
        "DisplayName": "Contract ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "Sans",
        "DisplayName": "SANs",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-addressLineOne",
        "DisplayName": "Admin - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-addressLineTwo",
        "DisplayName": "Admin - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-city",
        "DisplayName": "Admin - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-country",
        "DisplayName": "Admin - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-email",
        "DisplayName": "Admin - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-firstName",
        "DisplayName": "Admin - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-lastName",
        "DisplayName": "Admin - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-organizationName",
        "DisplayName": "Admin - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-phone",
        "DisplayName": "Admin - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-postalCode",
        "DisplayName": "Admin - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-region",
        "DisplayName": "Admin - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-title",
        "DisplayName": "Admin - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-addressLineOne",
        "DisplayName": "Org - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-addressLineTwo",
        "DisplayName": "Org - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-city",
        "DisplayName": "Org - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-country",
        "DisplayName": "Org - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-organizationName",
        "DisplayName": "Org - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-phone",
        "DisplayName": "Org - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-postalCode",
        "DisplayName": "Org - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-region",
        "DisplayName": "Org - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-addressLineOne",
        "DisplayName": "Tech - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-addressLineTwo",
        "DisplayName": "Tech - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-city",
        "DisplayName": "Tech - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-country",
        "DisplayName": "Tech - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-email",
        "DisplayName": "Tech - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-firstName",
        "DisplayName": "Tech - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-lastName",
        "DisplayName": "Tech - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-organizationName",
        "DisplayName": "Tech - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-phone",
        "DisplayName": "Tech - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-postalCode",
        "DisplayName": "Tech - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-region",
        "DisplayName": "Tech - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-title",
        "DisplayName": "Tech - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Production\",\"Staging\"]",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Azure Application Gateway Certificate Binding",
    "ShortName": "AppGwBin",
    "Capability": "AzureAppGwBin",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": false,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration (Application)",
    "ShortName": "AzureApp",
    "Capability": "AzureApp",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration 2 (Application)",
    "ShortName": "AzureApp2",
    "Capability": "AzureApp2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Application is instantiated",
    "StorePathDescription": "The Object ID of the target Application/App Registration that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/App Registration certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/App Registration certificates. If Client Certificate Auth is used, you **must** select 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/App Registrations certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate.  If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Application Gateway Certificate",
    "ShortName": "AzureAppGw",
    "Capability": "AzureAppGw",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application (Service Principal)",
    "ShortName": "AzureSP",
    "Capability": "AzureSP",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application 2 (Service Principal)",
    "ShortName": "AzureSP2",
    "Capability": "AzureSP2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Service Principal is instantiated",
    "StorePathDescription": "The Object ID of the target Service Principal/Enterprise Application that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. If Client Certificate Auth is used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate. If Client Certificate Auth is not used or the certificate's private key is not encrypted, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Bosch IP Camera",
    "ShortName": "BIPCamera",
    "Capability": "BIPCamera",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "CertificateUsage",
        "DisplayName": "Certificate Usage",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Options": ",HTTPS,EAP-TLS-client,TLS-DATE-client"
      },
      {
        "Name": "Name",
        "DisplayName": "Name (Alias)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        }
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DefaultValue": "false"
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "CiscoAsa",
    "ShortName": "CiscoAsa",
    "Capability": "CiscoAsa",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "CommitToDisk",
        "DisplayName": "Commit To Disk",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "interfaces",
        "DisplayName": "Interfaces Comma Separated",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "CitrixAdc",
    "ShortName": "CitrixAdc",
    "Capability": "CitrixAdc",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "linkToIssuer",
        "DisplayName": "Link To Issuer",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Determines whether an attempt will be made to link the added certificate (via a Management-Add job) to its issuing CA certificate."
      }
    ],
    "EntryParameters": [
      {
        "Name": "virtualServerName",
        "DisplayName": "Virtual Server Name",
        "Type": "String",
        "Description": "When adding a certificate, this can be a single VServer name or a comma separated list of VServers to bind to  Note: must match the number of Virtual SNI Cert values.",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "Name": "sniCert",
        "DisplayName": "SNI Cert",
        "Type": "String",
        "Description": "When adding a certificate, this can be a single boolean value (true/false) or a comma separated list of boolean values to determine whether the binding should use server name indication.  Note: must match the number of Virtual Server Name values.",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "ClientMachineDescription": "The DNS or IP Address of the Citrix ADC Appliance.",
    "StorePathDescription": "The path where certificate files are located on the Citrix ADC appliance.  This value will likely be /nsconfig/ssl/"
  },
  {
    "Name": "IBM Data Power",
    "ShortName": "DataPower",
    "Capability": "DataPower",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "Api UserName for DataPower. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password for DataPower API access.  Used for inventory.(or valid PAM key if the password is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Should be true, http is not supported."
      },
      {
        "Name": "InventoryBlackList",
        "DisplayName": "Inventory Black List",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Comma seperated list of alias values you do not want to inventory from DataPower."
      },
      {
        "Name": "Protocol",
        "DisplayName": "Protocol Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "https",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Comma seperated list of alias values you do not want to inventory from DataPower."
      },
      {
        "Name": "PublicCertStoreName",
        "DisplayName": "Public Cert Store Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "pubcert",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "This probably will remain pubcert unless someone changed the default name in DataPower."
      },
      {
        "Name": "InventoryPageSize",
        "DisplayName": "Inventory Page Size",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "100",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "This determines the page size during the inventory calls. (100 should be fine)."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the IP or Domain name and Port Needed for REST API Access.  For SSH Access, Port 22 will be used.",
    "StorePathDescription": "The Store Path field should always be / unless we later determine there are alternate locations needed.",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "F5 Big IQ",
    "ShortName": "F5-BigIQ",
    "Capability": "F5-BigIQ",
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "DeployCertificateOnRenewal",
        "DisplayName": "Deploy Certificate to Linked Big IP on Renewal",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "This optional setting determines whether renewed certificates (Management-Add jobs with Overwrite selected) will be deployed to all linked Big IP devices. Linked devices are determined by looking at all of the client-ssl profiles that reference the renewed certificate that have an associated virtual server linked to a Big IP device. An immediate deployment is then scheduled within F5 Big IQ for each linked Big IP device."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "If you use a self signed certificate for the F5 Big IQ portal, you will need to add this optional Custom Field and set the value to True on the managed certificate store."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "If you prefer to use F5 Big IQ's Token Authentication to authenticate F5 Big IQ API calls, you will need to add this optional Custom Field and set the value to True on the managed certificate store. If set to True for the store, the userid/password credentials you set for the certificate store will be used once to receive a token. This token is then used for all subsequent API calls for the duration of the job. If this option does not exist or is set to False, the userid/password credentials you set for the certificate store will be used for all API calls."
      },
      {
        "Name": "LoginProviderName",
        "DisplayName": "Authentication Provider Name",
        "Type": "String",
        "DependsOn": "UseTokenAuth",
        "DefaultValue": "",
        "Required": false,
        "Description": "If Use Token Authentication is selected, you may optionally add a value for the authentication provider F5 Big IQ will use to retrieve the auth token. If you choose not to add this field or leave it blank on the certificate store (with no default value set), the default of \"TMOS\" will be used."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 Big IQ device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 Big IQ device."
      }
    ],
    "EntryParameters": [
      {
        "Name": "Alias",
        "DisplayName": "Alias (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "The name F5 Big IQ uses to identify the certificate"
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite (Reenrollment only)",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "False",
        "Options": "",
        "Description": "Allow overwriting an existing certificate when reenrolling?"
      },
      {
        "Name": "SANs",
        "DisplayName": "SANs (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "External SANs for the requested certificate. Each SAN must be prefixed with the type (DNS: or IP:) and multiple SANs must be delimitted by an ampersand (&). Example: DNS:server.domain.com&IP:127.0.0.1&DNS:server2.domain.com.  This is an optional field."
      }
    ]
  },
  {
    "Name": "F5 CA Profiles REST",
    "ShortName": "F5-CA-REST",
    "Capability": "F5-CA-REST",
    "ServerRequired": true,
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition on the F5 device you wish to manage. This value is case sensitive, so if the partition name is \"Common\", it must be entered as \"Common\" and not \"common\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentiation instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "F5 SSL Profiles REST",
    "ShortName": "F5-SL-REST",
    "Capability": "F5-SL-REST",
    "ServerRequired": true,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition on the F5 device you wish to manage. This value is case sensitive, so if the partition name is \"Common\", it must be entered as \"Common\" and not \"common\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Check \"No Password\" if you wish the private key of any added certificate to be set to Key Security Type \"Normal\". Enter a value (either a password or pointer to an installed PAM provider key for the password) to be used to encrypt the private key of any added certificate for Key Security Type of \"Password\".",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentiation instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "F5 WS Profiles REST",
    "ShortName": "F5-WS-REST",
    "Capability": "F5-WS-REST",
    "ServerRequired": true,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition on the F5 device you wish to manage. This value is case sensitive, so if the partition name is \"Common\", it must be entered as \"Common\" and not \"common\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentiation instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "FortiWeb",
    "ShortName": "FortiWeb",
    "Capability": "FortiWeb",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username for CLI/SSH and REST API access.  Used for inventory. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password for CLI/SSH and REST API access.  Used for inventory.(or valid PAM key if the password is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Should be true, http is not supported."
      },
      {
        "Name": "ADom",
        "DisplayName": "Administrative Domain",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "root",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Specifies the administrative or virtual domain within the FortiWeb system that the API user is targeting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the IP or Domain name and Port Needed for REST API Access.  For SSH Access, Port 22 will be used.",
    "StorePathDescription": "The Store Path field should always be / unless we later determine there are alternate locations needed.",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Fortigate",
    "ShortName": "Fortigate",
    "Capability": "Fortigate",
    "ServerRequired": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true
    },
    "Properties": [],
    "EntryParameters": []
  },
  {
    "Name": "GCP Load Balancer",
    "ShortName": "GCPLoadBal",
    "Capability": "GCPLoadBal",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "jsonKey",
        "DisplayName": "Service Account Key",
        "Required": true,
        "DependsOn": "",
        "Type": "Secret",
        "DefaultValue": ""
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "GCP Certificate Manager",
    "ShortName": "GcpCertMgr",
    "Capability": "GcpCertMgr",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "StorePathType": "",
    "StorePathValue": "n/a",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "Location",
        "DisplayName": "Location",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "global",
        "Required": true
      },
      {
        "Name": "ServiceAccountKey",
        "DisplayName": "Service Account Key File Path",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "Hashicorp Vault Key-Value",
    "ShortName": "HCVKV",
    "Capability": "HCVKV",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultToken",
        "DisplayName": "Vault Token",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultServerUrl",
        "DisplayName": "Vault Server URL",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Cert Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value JKS",
    "ShortName": "HCVKVJKS",
    "Capability": "HCVKVJKS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PKCS12",
    "ShortName": "HCVKVP12",
    "Capability": "HCVKVP12",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PEM",
    "ShortName": "HCVKVPEM",
    "Capability": "HCVKVPEM",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PFX",
    "ShortName": "HCVKVPFX",
    "Capability": "HCVKVPFX",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault PKI",
    "ShortName": "HCVPKI",
    "Capability": "HCVPKI",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "IIS Bound Certificate",
    "ShortName": "IISU",
    "Capability": "IISU",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http",
        "Required": true,
        "Description": "Multiple choice value specifying the protocol (https or http) that the target server's WinRM listener is using. Example: 'https' to use secure communication."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server for establishing the WinRM session. Example: 'P@ssw0rd123'."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      }
    ],
    "EntryParameters": [
      {
        "Name": "Port",
        "DisplayName": "Port",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "443",
        "Options": "",
        "Description": "String value specifying the IP port to bind the certificate to for the IIS site. Example: '443' for HTTPS."
      },
      {
        "Name": "IPAddress",
        "DisplayName": "IP Address",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "*",
        "Options": "",
        "Description": "String value specifying the IP address to bind the certificate to for the IIS site. Example: '*' for all IP addresses or '192.168.1.1' for a specific IP address."
      },
      {
        "Name": "HostName",
        "DisplayName": "Host Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the host name (host header) to bind the certificate to for the IIS site. Leave blank for all host names or enter a specific hostname such as 'www.example.com'."
      },
      {
        "Name": "SiteName",
        "DisplayName": "IIS Site Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "Default Web Site",
        "Options": "",
        "Description": "String value specifying the name of the IIS web site to bind the certificate to. Example: 'Default Web Site' or any custom site name such as 'MyWebsite'."
      },
      {
        "Name": "SniFlag",
        "DisplayName": "SSL Flags",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "0",
        "Options": "",
        "Description": "A 128-Bit Flag that determines what type of SSL settings you wish to use.  The default is 0, meaning No SNI.  For more information, check IIS documentation for the appropriate bit setting.)"
      },
      {
        "Name": "Protocol",
        "DisplayName": "Protocol",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "https",
        "Options": "https,http",
        "Description": "Multiple choice value specifying the protocol to bind to. Example: 'https' for secure communication."
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing the private keys. If not specified, defaults to 'Microsoft Strong Cryptographic Provider'. This value would typically be specified when leveraging a Hardware Security Module (HSM). The specified cryptographic provider must be available on the target server being managed. The list of installed cryptographic providers can be obtained by running 'certutil -csplist' on the target Server."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs. Can be made optional if RFC 2818 is disabled on the CA."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "[\"My\",\"WebHosting\"]",
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the IIS certificate store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields.  For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Windows certificate store path to manage. Choose 'My' for the Personal store or 'WebHosting' for the Web Hosting store."
  },
  {
    "Name": "Imperva",
    "ShortName": "Imperva",
    "Capability": "Imperva",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true
    },
    "Properties": [],
    "EntryParameters": []
  },
  {
    "Name": "K8SCert",
    "ShortName": "K8SCert",
    "Capability": "K8SCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "cert",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8SCluster",
    "ShortName": "K8SCluster",
    "Capability": "K8SCluster",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SJKS",
    "ShortName": "K8SJKS",
    "Capability": "K8SJKS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "jks",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".jks",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "PasswordFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SNS",
    "ShortName": "K8SNS",
    "Capability": "K8SNS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SPKCS12",
    "ShortName": "K8SPKCS12",
    "Capability": "K8SPKCS12",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeSecretType",
        "DisplayName": "Kube Secret Type",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "pkcs12",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".p12",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "Password Field Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "Kube Secret Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SSecret",
    "ShortName": "K8SSecret",
    "Capability": "K8SSecret",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8STLSSecr",
    "ShortName": "K8STLSSecr",
    "Capability": "K8STLSSecr",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "tls_secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "MyOrchestratorStoreType",
    "ShortName": "MOST",
    "Capability": "MOST",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "CustomField1",
        "DisplayName": "CustomField1",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": true
      },
      {
        "Name": "CustomField2",
        "DisplayName": "CustomField2",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Nmap Orchestrator",
    "ShortName": "Nmap",
    "Capability": "Nmap",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Inventory": true,
      "Reenrollment": false,
      "Remove": true
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "Freeform",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "PaloAlto",
    "ShortName": "PaloAlto",
    "Capability": "PaloAlto",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "DeviceGroup",
        "DisplayName": "Device Group",
        "Type": "String",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "InventoryTrustedCerts",
        "DisplayName": "Inventory Trusted Certs",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "TemplateStack",
        "DisplayName": "Template Stack",
        "Type": "String",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "RFDER",
    "ShortName": "RFDER",
    "Capability": "RFDER",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.der'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.der) for Windows orchestrated servers. Example: '/folder/path/storename.der' or 'c:\\folder\\path\\storename.der'."
  },
  {
    "Name": "RFJKS",
    "ShortName": "RFJKS",
    "Capability": "RFJKS",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The IP address or DNS of the server hosting the certificate store.  For more information, see [Client Machine ](#client-machine-instructions)",
    "StorePathDescription": "The full path and file name, including file extension if one exists where the certificate store file is located.  For Linux orchestrated servers, StorePath will begin with a forward slash (i.e. /folder/path/storename.ext).  For Windows orchestrated servers, it should begin with a drive letter (i.e. c:\\folder\\path\\storename.ext)."
  },
  {
    "Name": "RFKDB",
    "ShortName": "RFKDB",
    "Capability": "RFKDB",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.kdb) for Windows orchestrated servers. Example: '/folder/path/storename.kdb' or 'c:\\folder\\path\\storename.kdb'."
  },
  {
    "Name": "RFORA",
    "ShortName": "RFORA",
    "Capability": "RFORA",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "WorkFolder",
        "DisplayName": "Location to use for creation/removal of work files",
        "Required": true,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The WorkFolder field should contain the path on the managed server where temporary work files can be created, modified, and deleted during Inventory and Management jobs. Example: '/path/to/workfolder'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name of the Oracle Wallet, including the 'eWallet.p12' file name by convention. Example: '/path/to/eWallet.p12' or 'c:\\path\\to\\eWallet.p12'."
  },
  {
    "Name": "RFPEM",
    "ShortName": "RFPEM",
    "Capability": "RFPEM",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store.  For stores with PKCS#8 private keys, set the password for encrypted private keys (BEGIN ENCRYPTED PRIVATE KEY) or 'No Value' for unencrypted private keys (BEGIN PRIVATE KEY).  If managing a store with a PKCS#1 private key (BEGIN RSA PRIVATE KEY), this value MUST be set to 'No Value'",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "IsTrustStore",
        "DisplayName": "Trust Store",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IsTrustStore field should contain a boolean value ('true' or 'false') indicating whether the store will be identified as a trust store, which can hold multiple certificates without private keys. Example: 'true' for a trust store or 'false' for a store with a single certificate and private key."
      },
      {
        "Name": "IncludesChain",
        "DisplayName": "Store Includes Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IncludesChain field should contain a boolean value ('true' or 'false') indicating whether the certificate store includes the full certificate chain along with the end entity certificate. Example: 'true' to include the full chain or 'false' to exclude it."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.pem'."
      },
      {
        "Name": "IgnorePrivateKeyOnInventory",
        "DisplayName": "Ignore Private Key On Inventory",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IgnorePrivateKeyOnInventory field should contain a boolean value ('true' or 'false') indicating whether to disregard the private key during inventory. Setting this to 'true' will allow inventory for the store without needing to supply the location of the private key or the password if the key is encrypted.  However, doing this makes the store in effect inventory-only and no management jobs will be able to be run for this store. Example: 'true' to ignore the private key or 'false' to include it."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.ext) for Windows orchestrated servers. Example: '/folder/path/storename.pem' or 'c:\\folder\\path\\storename.pem'."
  },
  {
    "Name": "RFPkcs12",
    "ShortName": "RFPkcs12",
    "Capability": "RFPkcs12",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.p12) for Windows orchestrated servers. Example: '/folder/path/storename.p12' or 'c:\\folder\\path\\storename.p12'."
  },
  {
    "Name": "SampleStoreType",
    "ShortName": "SAMPLETYPE",
    "Capability": "SAMPLETYPE",
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Signum",
    "ShortName": "Signum",
    "Capability": "Signum",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "na",
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "VMware-NSX",
    "ShortName": "VMware-NSX",
    "Capability": "VMware-NSX",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "ApiVersion",
        "DisplayName": "X-Avi-Version",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "20.1.1",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Application\",\"Controller\",\"CA\"]",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "WinCerMgmt",
    "ShortName": "WinCerMgmt",
    "Capability": "WinCerMgmt",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "spnwithport",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Windows Certificate",
    "ShortName": "WinCert",
    "Capability": "WinCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http",
        "Required": true,
        "Description": "Multiple choice value specifying the protocol (https or http) that the target server's WinRM listener is using. Example: 'https' to use secure communication."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server for establishing the WinRM session. Example: 'P@ssw0rd123'."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      }
    ],
    "EntryParameters": [
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing the private keys. If not specified, defaults to 'Microsoft Strong Cryptographic Provider'. This value would typically be specified when leveraging a Hardware Security Module (HSM). The specified cryptographic provider must be available on the target server being managed. The list of installed cryptographic providers can be obtained by running 'certutil -csplist' on the target Server."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs. Can be made optional if RFC 2818 is disabled on the CA."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the certificate store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields. For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Windows certificate store path to manage. The store must exist in the Local Machine store on the target server, e.g., 'My' for the Personal Store or 'Root' for the Trusted Root Certification Authorities Store."
  },
  {
    "Name": "WinSql",
    "ShortName": "WinSql",
    "Capability": "WinSql",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http",
        "Required": true,
        "Description": "Multiple choice value specifying the protocol (https or http) that the target server's WinRM listener is using. Example: 'https' to use secure communication."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server for establishing the WinRM session. Example: 'P@ssw0rd123'."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      },
      {
        "Name": "RestartService",
        "DisplayName": "Restart SQL Service After Cert Installed",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Boolean value (true or false) indicating whether to restart the SQL Server service after installing the certificate. Example: 'true' to enable service restart after installation."
      }
    ],
    "EntryParameters": [
      {
        "Name": "InstanceName",
        "DisplayName": "Instance Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "String value specifying the SQL Server instance name to bind the certificate to. Example: 'MSSQLServer' for the default instance or 'Instance1' for a named instance."
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Optional string value specifying the name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing private keys. Example: 'Microsoft Strong Cryptographic Provider'."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "My",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the SQL Server Certificate Store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields. For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Fixed string value 'My' indicating the Personal store on the Local Machine. This denotes the Windows certificate store to be managed for SQL Server."
  },
  {
    "Name": "F5 WAF CA",
    "ShortName": "f5WafCa",
    "Capability": "f5WafCa",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Not used.  Set to No Value."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The API Token configured in the F5 Distributed Cloud instance's Account Settings. Please review the Requirements & Prerequisites section in this README for more information on creating this API token."
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "The URL for the F5 Distributed Cloud instance (typically ending in '.console.ves.volterra.io').",
    "StorePathDescription": "The Multi-Cloud App Connect namespace containing the certificates you wish to manage."
  },
  {
    "Name": "F5 WAF TLS",
    "ShortName": "f5WafTls",
    "Capability": "f5WafTls",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Not used.  Set to No Value."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The API Token configured in the F5 Distributed Cloud instance's Account Settings. Please review the Requirements & Prerequisites section in this README for more information on creating this API token."
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "The URL for the F5 Distributed Cloud instance (typically ending in '.console.ves.volterra.io').",
    "StorePathDescription": "The Multi-Cloud App Connect namespace containing the certificates you wish to manage."
  },
  {
    "Name": "iDRAC",
    "ShortName": "iDRAC",
    "Capability": "iDRAC",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden"
  }
]