[
  {
    "Name": "Azure Keyvault",
    "BlueprintAllowed": false,
    "Capability": "AKV",
    "CustomAliasAllowed": "Optional",
    "EntryParameters": null,
    "JobProperties": [],
    "LocalStore": false,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "Properties": [
      {
        "Name": "TenantId",
        "DisplayName": "Tenant Id",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "SkuType",
        "DisplayName": "SKU Type",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "standard,premium",
        "Required": false
      },
      {
        "Name": "VaultRegion",
        "DisplayName": "Vault Region",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "eastus,eastus2,westus2,westus3,westus",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Cloud",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "public,china,germany,government",
        "Required": false
      },
      {
        "Name": "PrivateEndpoint",
        "DisplayName": "Private KeyVault Endpoint",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "ServerRequired": true,
    "ShortName": "AKV",
    "StorePathType": "",
    "StorePathValue": "",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    }
  },
  {
    "Name": "AWS Certificate Manager",
    "ShortName": "AWS-ACM",
    "Capability": "AWS-ACM",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "UseOAuth",
        "DisplayName": "Use OAuth 2.0 Provider",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "UseIAM",
        "DisplayName": "Use IAM User Auth",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      },
      {
        "Name": "OAuthScope",
        "DisplayName": "OAuth Scope",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "OAuthGrantType",
        "DisplayName": "OAuth Grant Type",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "client_credentials",
        "Required": false
      },
      {
        "Name": "OAuthUrl",
        "DisplayName": "OAuth Url",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "https://***/oauth2/default/v1/token",
        "Required": false
      },
      {
        "Name": "IAMAssumeRole",
        "DisplayName": "AWS Role to Assume (IAM)",
        "Type": "String",
        "DependsOn": "UseIAM",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "OAuthAssumeRole",
        "DisplayName": "AWS Role to Assume (OAuth)",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "AWS Region",
        "DisplayName": "AWS Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Airlock Application Firewall Certificate",
    "ShortName": "AirlockWAF",
    "Capability": "AirlockWAF",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": true,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Allowed"
  },
  {
    "Name": "Akamai Certificate Provisioning Service",
    "ShortName": "Akamai",
    "Capability": "Akamai",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": false
    },
    "Properties": [
      {
        "StoreTypeId;omitempty": 0,
        "Name": "access_token",
        "DisplayName": "Access Token",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "client_token",
        "DisplayName": "Client Token",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "client_secret",
        "DisplayName": "Client Secret",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "StoreTypeId;omitempty": 0,
        "Name": "EnrollmentId",
        "DisplayName": "Enrollment ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "ContractId",
        "DisplayName": "Contract ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "Sans",
        "DisplayName": "SANs",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-addressLineOne",
        "DisplayName": "Admin - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-addressLineTwo",
        "DisplayName": "Admin - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-city",
        "DisplayName": "Admin - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-country",
        "DisplayName": "Admin - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-email",
        "DisplayName": "Admin - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-firstName",
        "DisplayName": "Admin - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-lastName",
        "DisplayName": "Admin - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-organizationName",
        "DisplayName": "Admin - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-phone",
        "DisplayName": "Admin - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-postalCode",
        "DisplayName": "Admin - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-region",
        "DisplayName": "Admin - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "admin-title",
        "DisplayName": "Admin - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-addressLineOne",
        "DisplayName": "Org - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-addressLineTwo",
        "DisplayName": "Org - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-city",
        "DisplayName": "Org - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-country",
        "DisplayName": "Org - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-organizationName",
        "DisplayName": "Org - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-phone",
        "DisplayName": "Org - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-postalCode",
        "DisplayName": "Org - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "org-region",
        "DisplayName": "Org - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-addressLineOne",
        "DisplayName": "Tech - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-addressLineTwo",
        "DisplayName": "Tech - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-city",
        "DisplayName": "Tech - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-country",
        "DisplayName": "Tech - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-email",
        "DisplayName": "Tech - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-firstName",
        "DisplayName": "Tech - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-lastName",
        "DisplayName": "Tech - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-organizationName",
        "DisplayName": "Tech - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-phone",
        "DisplayName": "Tech - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-postalCode",
        "DisplayName": "Tech - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-region",
        "DisplayName": "Tech - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      },
      {
        "StoreTypeId;omitempty": 0,
        "Name": "tech-title",
        "DisplayName": "Tech - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": null
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Production\",\"Staging\"]",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Azure Application Gateway Certificate Binding",
    "ShortName": "AppGwBin",
    "Capability": "AzureAppGwBin",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": false,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration (Application)",
    "ShortName": "AzureApp",
    "Capability": "AzureApp",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration 2 (Application)",
    "ShortName": "AzureApp2",
    "Capability": "AzureApp2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Application is instantiated",
    "StorePathDescription": "The Object ID of the target Application/App Registration that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/App Registration certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/App Registration certificates. If Client Certificate Auth is used, you **must** select 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/App Registrations certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate.  If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Application Gateway Certificate",
    "ShortName": "AzureAppGw",
    "Capability": "AzureAppGw",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application (Service Principal)",
    "ShortName": "AzureSP",
    "Capability": "AzureSP",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application 2 (Service Principal)",
    "ShortName": "AzureSP2",
    "Capability": "AzureSP2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Service Principal is instantiated",
    "StorePathDescription": "The Object ID of the target Service Principal/Enterprise Application that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. If Client Certificate Auth is used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate. If Client Certificate Auth is not used or the certificate's private key is not encrypted, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Bosch IP Camera",
    "ShortName": "BIPCamera",
    "Capability": "BIPCamera",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "CertificateUsage",
        "DisplayName": "Certificate Usage",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Options": ",HTTPS,EAP-TLS-client,TLS-DATE-client"
      },
      {
        "Name": "Name",
        "DisplayName": "Name (Alias)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        }
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DefaultValue": "false"
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "CiscoAsa",
    "ShortName": "CiscoAsa",
    "Capability": "CiscoAsa",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "CommitToDisk",
        "DisplayName": "Commit To Disk",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "interfaces",
        "DisplayName": "Interfaces Comma Separated",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "CitrixAdc",
    "ShortName": "CitrixAdc",
    "Capability": "CitrixAdc",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "linkToIssuer",
        "DisplayName": "Link To Issuer",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": false
      }
    ],
    "EntryParameters": [
      {
        "Name": "virtualServerName",
        "DisplayName": "Virtual Server Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "Name": "sniCert",
        "DisplayName": "SNI Cert",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DefaultValue": "FALSE"
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "InventoryEndpoint": "/AnyInventory/Update"
  },
  {
    "Name": "F5 Big IQ",
    "ShortName": "F5-BigIQ",
    "Capability": "F5-BigIQ",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "DeployCertificateOnRenewal",
        "DisplayName": "Deploy Certificate to Linked Big IP on Renewal",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "LoginProviderName",
        "DisplayName": "Authentication Provider Name",
        "Type": "String",
        "DependsOn": "UseTokenAuth",
        "DefaultValue": "",
        "Required": false
      }
    ],
    "EntryParameters": [
      {
        "Name": "Alias",
        "DisplayName": "Alias (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite (Reenrollment only)",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "False",
        "Options": ""
      },
      {
        "Name": "SANs",
        "DisplayName": "SANs (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "F5 CA Profiles REST",
    "ShortName": "F5-CA-REST",
    "Capability": "F5-CA-REST",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true
      },
      {
        "Name": "F5Version",
        "DisplayName": "Version of F5",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "v12,v13,v14,v15",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "F5 SSL Profiles REST",
    "ShortName": "F5-SL-REST",
    "Capability": "F5-SL-REST",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true
      },
      {
        "Name": "F5Version",
        "DisplayName": "Version of F5",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "v12,v13,v14,v15",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": true,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "F5 WS Profiles REST",
    "ShortName": "F5-WS-REST",
    "Capability": "F5-WS-REST",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true
      },
      {
        "Name": "F5Version",
        "DisplayName": "Version of F5",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "v12,v13,v14,v15",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Fortigate",
    "ShortName": "Fortigate",
    "Capability": "Fortigate",
    "ServerRequired": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true
    },
    "Properties": [],
    "EntryParameters": []
  },
  {
    "Name": "GCP Load Balancer",
    "ShortName": "GCPLoadBal",
    "Capability": "GCPLoadBal",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "jsonKey",
        "DisplayName": "Service Account Key",
        "Required": true,
        "DependsOn": "",
        "Type": "Secret",
        "DefaultValue": ""
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "GCP Certificate Manager",
    "ShortName": "GcpCertMgr",
    "Capability": "GcpCertMgr",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "StorePathType": "",
    "StorePathValue": "n/a",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "Location",
        "DisplayName": "Location",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "global",
        "Required": true
      },
      {
        "Name": "ServiceAccountKey",
        "DisplayName": "Service Account Key File Path",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "Hashicorp Vault Key-Value",
    "ShortName": "HCVKV",
    "Capability": "HCVKV",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultToken",
        "DisplayName": "Vault Token",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultServerUrl",
        "DisplayName": "Vault Server URL",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Cert Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value JKS",
    "ShortName": "HCVKVJKS",
    "Capability": "HCVKVJKS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PKCS12",
    "ShortName": "HCVKVP12",
    "Capability": "HCVKVP12",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PEM",
    "ShortName": "HCVKVPEM",
    "Capability": "HCVKVPEM",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value PFX",
    "ShortName": "HCVKVPFX",
    "Capability": "HCVKVPFX",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Sub-folder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault PKI",
    "ShortName": "HCVPKI",
    "Capability": "HCVPKI",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "VaultToken",
        "DisplayName": "VaultToken",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "VaultServerUrl",
        "DisplayName": "Vault Server URL",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "IIS Bound Certificate",
    "ShortName": "IISU",
    "Capability": "IISU",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "WinRm Protocol",
        "DisplayName": "WinRm Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http",
        "Required": true
      },
      {
        "Name": "WinRm Port",
        "DisplayName": "WinRm Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "Port",
        "DisplayName": "Port",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "443",
        "Options": ""
      },
      {
        "Name": "IPAddress",
        "DisplayName": "IP Address",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "*",
        "Options": ""
      },
      {
        "Name": "HostName",
        "DisplayName": "Host Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      },
      {
        "Name": "SiteName",
        "DisplayName": "IIS Site Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "Default Web Site",
        "Options": ""
      },
      {
        "Name": "SniFlag",
        "DisplayName": "SNI Support",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "0 - No SNI",
        "Options": "0 - No SNI,1 - SNI Enabled,2 - Non SNI Binding,3 - SNI Binding"
      },
      {
        "Name": "Protocol",
        "DisplayName": "Protocol",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "https",
        "Options": "https,http"
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "[\"My\",\"WebHosting\"]",
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Imperva",
    "ShortName": "Imperva",
    "Capability": "Imperva",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true
    },
    "Properties": [],
    "EntryParameters": []
  },
  {
    "Name": "K8SCert",
    "ShortName": "K8SCert",
    "Capability": "K8SCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "cert",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8SCluster",
    "ShortName": "K8SCluster",
    "Capability": "K8SCluster",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SJKS",
    "ShortName": "K8SJKS",
    "Capability": "K8SJKS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "jks",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".jks",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "PasswordFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SNS",
    "ShortName": "K8SNS",
    "Capability": "K8SNS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SPKCS12",
    "ShortName": "K8SPKCS12",
    "Capability": "K8SPKCS12",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeSecretType",
        "DisplayName": "Kube Secret Type",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "pkcs12",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".p12",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "Password Field Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "Kube Secret Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SSecret",
    "ShortName": "K8SSecret",
    "Capability": "K8SSecret",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8STLSSecr",
    "ShortName": "K8STLSSecr",
    "Capability": "K8STLSSecr",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "tls_secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "MyOrchestratorStoreType",
    "ShortName": "MOST",
    "Capability": "MOST",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "CustomField1",
        "DisplayName": "CustomField1",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": true
      },
      {
        "Name": "CustomField2",
        "DisplayName": "CustomField2",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Nmap Orchestrator",
    "ShortName": "Nmap",
    "Capability": "Nmap",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Inventory": true,
      "Reenrollment": false,
      "Remove": true
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "Freeform",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "PaloAlto",
    "ShortName": "PaloAlto",
    "Capability": "PaloAlto",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "DeviceGroup",
        "DisplayName": "Device Group",
        "Type": "String",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "RFDER",
    "ShortName": "RFDER",
    "Capability": "RFDER",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.der'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.der) for Windows orchestrated servers. Example: '/folder/path/storename.der' or 'c:\\folder\\path\\storename.der'."
  },
  {
    "Name": "RFJKS",
    "ShortName": "RFJKS",
    "Capability": "RFJKS",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The IP address or DNS of the server hosting the certificate store.  For more information, see [Client Machine ](#client-machine-instructions)",
    "StorePathDescription": "The full path and file name, including file extension if one exists where the certificate store file is located.  For Linux orchestrated servers, StorePath will begin with a forward slash (i.e. /folder/path/storename.ext).  For Windows orchestrated servers, it should begin with a drive letter (i.e. c:\\folder\\path\\storename.ext)."
  },
  {
    "Name": "RFKDB",
    "ShortName": "RFKDB",
    "Capability": "RFKDB",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.kdb) for Windows orchestrated servers. Example: '/folder/path/storename.kdb' or 'c:\\folder\\path\\storename.kdb'."
  },
  {
    "Name": "RFORA",
    "ShortName": "RFORA",
    "Capability": "RFORA",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "WorkFolder",
        "DisplayName": "Location to use for creation/removal of work files",
        "Required": true,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The WorkFolder field should contain the path on the managed server where temporary work files can be created, modified, and deleted during Inventory and Management jobs. Example: '/path/to/workfolder'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name of the Oracle Wallet, including the 'eWallet.p12' file name by convention. Example: '/path/to/eWallet.p12' or 'c:\\path\\to\\eWallet.p12'."
  },
  {
    "Name": "RFPEM",
    "ShortName": "RFPEM",
    "Capability": "RFPEM",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store.  For stores with PKCS#8 private keys, set the password for encrypted private keys (BEGIN ENCRYPTED PRIVATE KEY) or 'No Value' for unencrypted private keys (BEGIN PRIVATE KEY).  If managing a store with a PKCS#1 private key (BEGIN RSA PRIVATE KEY), this value MUST be set to 'No Value'",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      },
      {
        "Name": "IsTrustStore",
        "DisplayName": "Trust Store",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IsTrustStore field should contain a boolean value ('true' or 'false') indicating whether the store will be identified as a trust store, which can hold multiple certificates without private keys. Example: 'true' for a trust store or 'false' for a store with a single certificate and private key."
      },
      {
        "Name": "IncludesChain",
        "DisplayName": "Store Includes Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IncludesChain field should contain a boolean value ('true' or 'false') indicating whether the certificate store includes the full certificate chain along with the end entity certificate. Example: 'true' to include the full chain or 'false' to exclude it."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.pem'."
      },
      {
        "Name": "IgnorePrivateKeyOnInventory",
        "DisplayName": "Ignore Private Key On Inventory",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IgnorePrivateKeyOnInventory field should contain a boolean value ('true' or 'false') indicating whether to ignore the private key during inventory, which will make the store inventory-only and return all certificates without private key entries. Example: 'true' to ignore the private key or 'false' to include it."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.ext) for Windows orchestrated servers. Example: '/folder/path/storename.pem' or 'c:\\folder\\path\\storename.pem'."
  },
  {
    "Name": "RFPkcs12",
    "ShortName": "RFPkcs12",
    "Capability": "RFPkcs12",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.p12) for Windows orchestrated servers. Example: '/folder/path/storename.p12' or 'c:\\folder\\path\\storename.p12'."
  },
  {
    "Name": "SampleStoreType",
    "ShortName": "SAMPLETYPE",
    "Capability": "SAMPLETYPE",
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Signum",
    "ShortName": "Signum",
    "Capability": "Signum",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "na",
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "VMware-NSX",
    "ShortName": "VMware-NSX",
    "Capability": "VMware-NSX",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": true
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "ApiVersion",
        "DisplayName": "X-Avi-Version",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "20.1.1",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Application\",\"Controller\",\"CA\"]",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "WinCerMgmt",
    "ShortName": "WinCerMgmt",
    "Capability": "WinCerMgmt",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "spnwithport",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Windows Certificate",
    "ShortName": "WinCert",
    "Capability": "WinCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http",
        "Required": true
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "WinSql",
    "ShortName": "WinSql",
    "Capability": "WinSql",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "WinRm Protocol",
        "DisplayName": "WinRm Protocol",
        "Type": "MultipleChoice",
        "DependsOn": null,
        "DefaultValue": "https,http",
        "Required": true
      },
      {
        "Name": "WinRm Port",
        "DisplayName": "WinRm Port",
        "Type": "String",
        "DependsOn": null,
        "DefaultValue": "5986",
        "Required": true
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": null,
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "true",
        "Required": true
      },
      {
        "Name": "RestartService",
        "DisplayName": "Restart SQL Service After Cert Installed",
        "Type": "Bool",
        "DependsOn": null,
        "DefaultValue": "false",
        "Required": true
      }
    ],
    "EntryParameters": [
      {
        "Name": "InstanceName",
        "DisplayName": "Instance Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": ""
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "My",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden"
  }
]