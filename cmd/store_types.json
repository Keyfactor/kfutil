[
  {
    "BlueprintAllowed": false,
    "Capability": "AKV",
    "ClientMachineDescription": "The GUID of the tenant ID of the Azure Keyvault instance; for example, '12345678-1234-1234-1234-123456789abc'.",
    "CustomAliasAllowed": "Optional",
    "EntryParameters": [
      {
        "Name": "CertificateTags",
        "DisplayName": "Certificate Tags",
        "Description": "If desired, tags can be applied to the KeyVault entries.  Provide them as a JSON string of key-value pairs ie: '{'tag-name': 'tag-content', 'other-tag-name': 'other-tag-content'}'",
        "Type": "string",
        "DefaultValue": "",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "JobProperties": [],
    "LocalStore": false,
    "Name": "Azure Keyvault",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "Properties": [
      {
        "Name": "TenantId",
        "DisplayName": "Tenant Id",
        "Description": "The ID of the primary Azure Tenant where the KeyVaults are hosted",
        "Type": "String",
        "DependsOn": "",
        "Required": false
      },
      {
        "Name": "SkuType",
        "DisplayName": "SKU Type",
        "Description": "The SKU type for newly created KeyVaults (only needed if needing to create new KeyVaults in your Azure subscription via Command)",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "standard,premium",
        "Required": false
      },
      {
        "Name": "VaultRegion",
        "DisplayName": "Vault Region",
        "Description": "The Azure Region to put newly created KeyVaults (only needed if needing to create new KeyVaults in your Azure subscription via Command)",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "eastus,eastus2,westus2,westus3,westus",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Cloud",
        "Description": "The Azure Cloud where the KeyVaults are located (only necessary if not using the standard Azure Public cloud)",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "public,china,government",
        "Required": false
      },
      {
        "Name": "PrivateEndpoint",
        "DisplayName": "Private KeyVault Endpoint",
        "Description": "The private endpoint of your vault instance (if a private endpoint is configured in Azure)",
        "Type": "String",
        "DependsOn": "",
        "Required": false
      }
    ],
    "ServerRequired": true,
    "ShortName": "AKV",
    "StorePathDescription": "A string formatted as '{subscription id}:{resource group name}:{vault name}'; for example, '12345678-1234-1234-1234-123456789abc:myResourceGroup:myVault'.",
    "StorePathType": "",
    "StorePathValue": "",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    }
  },
  {
    "Name": "AWS Certificate Manager",
    "ShortName": "AWS-ACM",
    "Capability": "AWS-ACM",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "UseEC2AssumeRole",
        "DisplayName": "Assume new Account / Role in EC2",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to assume a new Account ID and Role when using EC2 credentials"
      },
      {
        "Name": "UseOAuth",
        "DisplayName": "Use OAuth 2.0 Provider",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to use an OAuth provider workflow to authenticate with AWS ACM"
      },
      {
        "Name": "UseIAM",
        "DisplayName": "Use IAM User Auth",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to use IAM User auth to assume a role when authenticating with AWS ACM"
      },
      {
        "Name": "EC2AssumeRole",
        "DisplayName": "AWS Role to Assume (EC2)",
        "Type": "String",
        "DependsOn": "UseEC2AssumeRole",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The AWS Role to assume using the EC2 instance credentials"
      },
      {
        "Name": "OAuthScope",
        "DisplayName": "OAuth Scope",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "This is the OAuth Scope needed for Okta OAuth, defined in Okta"
      },
      {
        "Name": "OAuthGrantType",
        "DisplayName": "OAuth Grant Type",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "client_credentials",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "In OAuth 2.0, the term \ufffdgrant type\ufffd refers to the way an application gets an access token. In Okta this is `client_credentials`"
      },
      {
        "Name": "OAuthUrl",
        "DisplayName": "OAuth Url",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "https://***/oauth2/default/v1/token",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "An optional parameter sts:ExternalId to pass with Assume Role calls"
      },
      {
        "Name": "IAMAssumeRole",
        "DisplayName": "AWS Role to Assume (IAM)",
        "Type": "String",
        "DependsOn": "UseIAM",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The AWS Role to assume as the IAM User."
      },
      {
        "Name": "OAuthAssumeRole",
        "DisplayName": "AWS Role to Assume (OAuth)",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The AWS Role to assume after getting an OAuth token."
      },
      {
        "Name": "ExternalId",
        "DisplayName": "sts:ExternalId",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "An optional parameter sts:ExternalId to pass with Assume Role calls"
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The AWS Access Key for an IAM User or Client ID for OAuth. Depends on Auth method in use."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The AWS Access Secret for an IAM User or Client Secret for OAuth. Depends on Auth method in use."
      }
    ],
    "EntryParameters": [
      {
        "Name": "AWS Region",
        "DisplayName": "AWS Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "When adding, this is the Region that the Certificate will be added to"
      },
      {
        "Name": "ACM Tags",
        "DisplayName": "ACM Tags",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "The optional ACM tags that should be assigned to the certificate.  Multiple name/value pairs may be entered in the format of `Name1=Value1,Name2=Value2,...,NameN=ValueN`"
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Optional",
    "ClientMachineDescription": "This is the AWS Account ID that will be used for access. This will dictate what certificates are usable by the orchestrator. Note: this does not have any effect on EC2 inferred credentials, which are limited to a specific role/account.",
    "StorePathDescription": "The AWS Region, or a comma-separated list of multiple regions, the store will operate in."
  },
  {
    "Name": "AWS Certificate Manager v3",
    "ShortName": "AWS-ACM-v3",
    "Capability": "AWS-ACM-v3",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "UseDefaultSdkAuth",
        "DisplayName": "Use Default SDK Auth",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to use Default SDK credentials"
      },
      {
        "Name": "DefaultSdkAssumeRole",
        "DisplayName": "Assume new Role using Default SDK Auth",
        "Type": "Bool",
        "DependsOn": "UseDefaultSdkAuth",
        "DefaultValue": "false",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to assume a new Role when using Default SDK credentials"
      },
      {
        "Name": "UseOAuth",
        "DisplayName": "Use OAuth 2.0 Provider",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to use an OAuth provider workflow to authenticate with AWS"
      },
      {
        "Name": "OAuthScope",
        "DisplayName": "OAuth Scope",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "This is the OAuth Scope needed for Okta OAuth, defined in Okta"
      },
      {
        "Name": "OAuthGrantType",
        "DisplayName": "OAuth Grant Type",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "client_credentials",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "In OAuth 2.0, the term 'grant type' refers to the way an application gets an access token. In Okta this is `client_credentials`"
      },
      {
        "Name": "OAuthUrl",
        "DisplayName": "OAuth Url",
        "Type": "String",
        "DependsOn": "UseOAuth",
        "DefaultValue": "https://***/oauth2/default/v1/token",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "An optional parameter sts:ExternalId to pass with Assume Role calls"
      },
      {
        "Name": "OAuthClientId",
        "DisplayName": "OAuth Client ID",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The Client ID for OAuth."
      },
      {
        "Name": "OAuthClientSecret",
        "DisplayName": "OAuth Client Secret",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The Client Secret for OAuth."
      },
      {
        "Name": "UseIAM",
        "DisplayName": "Use IAM User Auth",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "A switch to enable the store to use IAM User auth to assume a role when authenticating with AWS"
      },
      {
        "Name": "IAMUserAccessKey",
        "DisplayName": "IAM User Access Key",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The AWS Access Key for an IAM User"
      },
      {
        "Name": "IAMUserAccessSecret",
        "DisplayName": "IAM User Access Secret",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The AWS Access Secret for an IAM User."
      },
      {
        "Name": "ExternalId",
        "DisplayName": "sts:ExternalId",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "An optional parameter sts:ExternalId to pass with Assume Role calls"
      }
    ],
    "EntryParameters": [
      {
        "Name": "ACM Tags",
        "DisplayName": "ACM Tags",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "The optional ACM tags that should be assigned to the certificate.  Multiple name/value pairs may be entered in the format of `Name1=Value1,Name2=Value2,...,NameN=ValueN`"
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Optional",
    "ClientMachineDescription": "This is a full AWS ARN specifying a Role. This is the Role that will be assumed in any Auth scenario performing Assume Role. This will dictate what certificates are usable by the orchestrator. A preceding [profile] name should be included if a Credential Profile is to be used in Default Sdk Auth.",
    "StorePathDescription": "A single specified AWS Region the store will operate in. Additional regions should get their own store defined."
  },
  {
    "Name": "Akamai Certificate Provisioning Service",
    "ShortName": "Akamai",
    "Capability": "Akamai",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "access_token",
        "DisplayName": "Access Token",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The Akamai access_token for authentication."
      },
      {
        "Name": "client_token",
        "DisplayName": "Client Token",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The Akamai client_token for authentication."
      },
      {
        "Name": "client_secret",
        "DisplayName": "Client Secret",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The Akamai client_secret for authentication."
      }
    ],
    "EntryParameters": [
      {
        "Name": "EnrollmentId",
        "DisplayName": "Enrollment ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "Enrollment ID of a certificate enrollment in Akamai. This should only be supplied for ODKG when replacing an existing certificate."
      },
      {
        "Name": "ContractId",
        "DisplayName": "Contract ID",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "The Contract ID of your account in Akamai."
      },
      {
        "Name": "Sans",
        "DisplayName": "SANs",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "Description": "SANs for the new certificate. If multiple are supplied, they should be split with an ampersand character '&'"
      },
      {
        "Name": "admin-addressLineOne",
        "DisplayName": "Admin - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-addressLineTwo",
        "DisplayName": "Admin - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "Optional field for Administrator contact."
      },
      {
        "Name": "admin-city",
        "DisplayName": "Admin - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-country",
        "DisplayName": "Admin - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-email",
        "DisplayName": "Admin - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-firstName",
        "DisplayName": "Admin - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-lastName",
        "DisplayName": "Admin - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-organizationName",
        "DisplayName": "Admin - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-phone",
        "DisplayName": "Admin - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-postalCode",
        "DisplayName": "Admin - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-region",
        "DisplayName": "Admin - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "admin-title",
        "DisplayName": "Admin - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Administrator contact."
      },
      {
        "Name": "org-addressLineOne",
        "DisplayName": "Org - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-addressLineTwo",
        "DisplayName": "Org - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "Optional field for Organization contact."
      },
      {
        "Name": "org-city",
        "DisplayName": "Org - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-country",
        "DisplayName": "Org - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-organizationName",
        "DisplayName": "Org - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-phone",
        "DisplayName": "Org - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-postalCode",
        "DisplayName": "Org - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "org-region",
        "DisplayName": "Org - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Organization contact."
      },
      {
        "Name": "tech-addressLineOne",
        "DisplayName": "Tech - Address Line 1",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-addressLineTwo",
        "DisplayName": "Tech - Address Line 2",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "Optional field for Akamai Tech contact."
      },
      {
        "Name": "tech-city",
        "DisplayName": "Tech - City",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-country",
        "DisplayName": "Tech - Country",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-email",
        "DisplayName": "Tech - Email",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact. Must be an akamai.com email address."
      },
      {
        "Name": "tech-firstName",
        "DisplayName": "Tech - First Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-lastName",
        "DisplayName": "Tech - Last Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-organizationName",
        "DisplayName": "Tech - Organization Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "Akamai",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-phone",
        "DisplayName": "Tech - Phone",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-postalCode",
        "DisplayName": "Tech - Postal Code",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-region",
        "DisplayName": "Tech - Region",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      },
      {
        "Name": "tech-title",
        "DisplayName": "Tech - Title",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DefaultValue": "SET-DEFAULT",
        "Description": "Required field for Akamai Tech contact."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Production\",\"Staging\"]",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "The Client Machine field is the Akamai REST API URL. This should be equal to the the \"host\" value from the API credentials file.",
    "StorePathDescription": "The Akamai network the certificate will be managed from. Value can be either \"Production\" or \"Staging\"."
  },
  {
    "Name": "Alteon Load Balancer",
    "ShortName": "AlteonLB",
    "Capability": "AlteonLB",
    "ClientMachineDescription": "The Alteon Load Balancer Server and port",
    "StorePathDescription": "This value isn't used for this integration (other than to uniquely identify the cert store in certificate searches).",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": false,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Alteon user ID with sufficient permissions to manage certs in the Alteon Load Balancer.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "Password associated with Alteon user ID entered above.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Azure Application Gateway Certificate Binding",
    "ShortName": "AppGwBin",
    "Capability": "AzureAppGwBin",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": false,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration (Application)",
    "ShortName": "AzureApp",
    "Capability": "AzureApp",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure App Registration 2 (Application)",
    "ShortName": "AzureApp2",
    "Capability": "AzureApp2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Application is instantiated",
    "StorePathDescription": "The Object ID of the target Application/App Registration that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/App Registration certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/App Registration certificates. If Client Certificate Auth is used, you **must** select 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/App Registrations certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate.  If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Application Gateway Certificate",
    "ShortName": "AzureAppGw",
    "Capability": "AzureAppGw",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "Azure resource ID of the application gateway, following the format: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/applicationGateways/<application-gateway-name>.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "Application ID of the service principal, representing the identity used for managing the Application Gateway.",
        "Required": false
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with the Azure Resource Management API for managing Application Gateway certificates, OR the password that encrypts the private key in ClientCertificate",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Azure Resource Management API for managing Application Gateway certificates. See the [requirements](#client-certificate-or-client-secret) for more information.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application (Service Principal)",
    "ShortName": "AzureSP",
    "Capability": "AzureSP",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID that owns the Service Principal.",
    "StorePathDescription": "The Application ID of the target Application/Service Principal that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Application/Service Principal certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Application/Service Principal certificates, OR the password that encrypts the private key in ClientCertificate. If Client Cert Auth is used _and_ the Client Certificate's private key is not encrypted, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Application/Service Principal certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** select 'No Value' for this field.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DefaultValue": "true",
        "Description": "Specifies whether SSL should be used for communication with the server. Set to 'true' to enable SSL, and 'false' to disable it.",
        "Required": true
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Azure Enterprise Application 2 (Service Principal)",
    "ShortName": "AzureSP2",
    "Capability": "AzureSP2",
    "LocalStore": false,
    "ClientMachineDescription": "The Azure Tenant (directory) ID where the Service Principal is instantiated",
    "StorePathDescription": "The Object ID of the target Service Principal/Enterprise Application that will be managed by the Azure App Registration and Enterprise Application Orchestrator extension.",
    "SupportedOperations": {
      "Add": true,
      "Remove": true,
      "Enrollment": false,
      "Discovery": true,
      "Inventory": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "Description": "The Application ID of the Service Principal used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates.",
        "Required": true
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "A Client Secret that the extension will use to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. If Client Certificate Auth is used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificate",
        "DisplayName": "Client Certificate",
        "DependsOn": "ServerUsername",
        "Type": "Secret",
        "Description": "The client certificate used to authenticate with Microsoft Graph for managing Service Principal/Enterprise Application certificates. See the [requirements](#client-certificate-or-client-secret) for more information. If Client Certificate Auth is not used, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "ClientCertificatePassword",
        "DisplayName": "Client Certificate Password",
        "DependsOn": "ClientCertificate",
        "Type": "Secret",
        "Description": "The (optional) password that encrypts the private key in ClientCertificate. If Client Certificate Auth is not used or the certificate's private key is not encrypted, you **must** check 'No Value'.",
        "Required": false
      },
      {
        "Name": "AzureCloud",
        "DisplayName": "Azure Global Cloud Authority Host",
        "Type": "MultipleChoice",
        "DefaultValue": "public,china,germany,government",
        "Description": "Specifies the Azure Cloud instance used by the organization.",
        "Required": false
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Bosch IP Camera",
    "ShortName": "BIPCamera",
    "Capability": "BIPCamera",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": false
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Enter the username of the configured \"service\" user on the camera"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Enter the password of the configured \"service\" user on the camera"
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Select True or False depending on if SSL (HTTPS) should be used to communicate with the camera."
      }
    ],
    "EntryParameters": [
      {
        "Name": "CertificateUsage",
        "DisplayName": "Certificate Usage",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Options": ",HTTPS,EAP-TLS-client,TLS-DATE-client",
        "Description": "The Certificate Usage to assign to the cert after upload. Can be left blank to be assigned later."
      },
      {
        "Name": "Name",
        "DisplayName": "Name (Alias)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "Description": "The certificate Alias, entered again."
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DefaultValue": "false",
        "Description": "Select `True` if using an existing Alias name to remove and replace an existing certificate."
      }
    ],
    "ClientMachineDescription": "The IP address of the Camera. Sample is \"192.167.231.174:44444\". Include the port if necessary.",
    "StorePathDescription": "Enter the Serial Number of the camera e.g. `068745431065110085`"
  },
  {
    "Name": "CiscoAsa",
    "ShortName": "CiscoAsa",
    "Capability": "CiscoAsa",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "CommitToDisk",
        "DisplayName": "Commit To Disk",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "This controls if you will write to the disk or memory on the device when adding or removing certificates."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The username to log into the target server (This field is automatically created). Check the No Value Checkbox when using GMSA Accounts."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The password that matches the username to log into the target server (This field is automatically created). Check the No Value Checkbox when using GMSA Accounts."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Determines whether the server uses SSL or not (This field is automatically created)."
      }
    ],
    "EntryParameters": [
      {
        "Name": "interfaces",
        "DisplayName": "Interfaces Comma Separated",
        "Type": "String",
        "Description": "Comma separated list of Interfaces to bind to. One can be the primary certificate and the other can be the load balancing certificate. For inside here is a sample of binding to both primary and load balancing inside,inside vpnlb-ip.",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "Hostname or IP of the Cisco Asa Device without the http:// or https:// prefix same sample would be 10.5.0.4.",
    "StorePathDescription": "Cisco Asa Certificate Types to manage for Now all that is supported is /Identity."
  },
  {
    "Name": "CitrixAdc",
    "ShortName": "CitrixAdc",
    "Capability": "CitrixAdc",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The Citrix username (or valid PAM key if the username is stored in a KF Command configured PAM integration) to be used to log into the Citrix device."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The Citrix password (or valid PAM key if the password is stored in a KF Command configured PAM integration) to be used to log into the Citrix device."
      },
      {
        "Name": "linkToIssuer",
        "DisplayName": "Link To Issuer",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Determines whether an attempt will be made to link the added certificate (via a Management-Add job) to its issuing CA certificate."
      }
    ],
    "EntryParameters": [
      {
        "Name": "virtualServerName",
        "DisplayName": "Virtual Server Name",
        "Type": "String",
        "Description": "When adding a certificate, this can be a single VServer name or a comma separated list of VServers to bind to  Note: must match the number of Virtual SNI Cert values.",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      },
      {
        "Name": "sniCert",
        "DisplayName": "SNI Cert",
        "Type": "String",
        "Description": "When adding a certificate, this can be a single boolean value (true/false) or a comma separated list of boolean values to determine whether the binding should use server name indication.  Note: must match the number of Virtual Server Name values.",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        }
      }
    ],
    "ClientMachineDescription": "The DNS or IP Address of the Citrix ADC Appliance.",
    "StorePathDescription": "The path where certificate files are located on the Citrix ADC appliance.  This value will likely be /nsconfig/ssl/"
  },
  {
    "Name": "IBM Data Power",
    "ShortName": "DataPower",
    "Capability": "DataPower",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "Api UserName for DataPower. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password for DataPower API access.  Used for inventory.(or valid PAM key if the password is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Should be true, http is not supported."
      },
      {
        "Name": "InventoryBlackList",
        "DisplayName": "Inventory Black List",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Comma seperated list of alias values you do not want to inventory from DataPower."
      },
      {
        "Name": "Protocol",
        "DisplayName": "Protocol Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "https",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Comma seperated list of alias values you do not want to inventory from DataPower."
      },
      {
        "Name": "PublicCertStoreName",
        "DisplayName": "Public Cert Store Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "pubcert",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "This probably will remain pubcert unless someone changed the default name in DataPower."
      },
      {
        "Name": "InventoryPageSize",
        "DisplayName": "Inventory Page Size",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "100",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "This determines the page size during the inventory calls. (100 should be fine)."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the IP or Domain name and Port Needed for REST API Access.  For SSH Access, Port 22 will be used.",
    "StorePathDescription": "The Store Path field should always be / unless we later determine there are alternate locations needed.",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "F5 Big IQ",
    "ShortName": "F5-BigIQ",
    "Capability": "F5-BigIQ",
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "DeployCertificateOnRenewal",
        "DisplayName": "Deploy Certificate to Linked Big IP on Renewal",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "This optional setting determines whether renewed certificates (Management-Add jobs with Overwrite selected) will be deployed to all linked Big IP devices. Linked devices are determined by looking at all of the client-ssl profiles that reference the renewed certificate that have an associated virtual server linked to a Big IP device. An immediate deployment is then scheduled within F5 Big IQ for each linked Big IP device."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "If you use a self signed certificate for the F5 Big IQ portal, you will need to add this optional Custom Field and set the value to True on the managed certificate store."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "If you prefer to use F5 Big IQ's Token Authentication to authenticate F5 Big IQ API calls, you will need to add this optional Custom Field and set the value to True on the managed certificate store. If set to True for the store, the userid/password credentials you set for the certificate store will be used once to receive a token. This token is then used for all subsequent API calls for the duration of the job. If this option does not exist or is set to False, the userid/password credentials you set for the certificate store will be used for all API calls."
      },
      {
        "Name": "LoginProviderName",
        "DisplayName": "Authentication Provider Name",
        "Type": "String",
        "DependsOn": "UseTokenAuth",
        "DefaultValue": "",
        "Required": false,
        "Description": "If Use Token Authentication is selected, you may optionally add a value for the authentication provider F5 Big IQ will use to retrieve the auth token. If you choose not to add this field or leave it blank on the certificate store (with no default value set), the default of \"TMOS\" will be used."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 Big IQ device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 Big IQ device."
      }
    ],
    "EntryParameters": [
      {
        "Name": "Alias",
        "DisplayName": "Alias (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "The name F5 Big IQ uses to identify the certificate"
      },
      {
        "Name": "Overwrite",
        "DisplayName": "Overwrite (Reenrollment only)",
        "Type": "Bool",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "False",
        "Options": "",
        "Description": "Allow overwriting an existing certificate when reenrolling?"
      },
      {
        "Name": "SANs",
        "DisplayName": "SANs (Reenrollment only)",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "External SANs for the requested certificate. Each SAN must be prefixed with the type (DNS: or IP:) and multiple SANs must be delimitted by an ampersand (&). Example: DNS:server.domain.com&IP:127.0.0.1&DNS:server2.domain.com.  This is an optional field."
      }
    ]
  },
  {
    "Name": "F5 CA Profiles REST",
    "ShortName": "F5-CA-REST",
    "Capability": "F5-CA-REST",
    "ServerRequired": true,
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition followed by the name of the bundle separated by a / (i.e. Common/BundleName). This value is case sensitive, so if the partition name is \"Common/BundleName\", it must be entered as \"Common/BundleName\" and not \"common/bundlename\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentiation instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "F5 SSL Profiles REST",
    "ShortName": "F5-SL-REST",
    "Capability": "F5-SL-REST",
    "ServerRequired": true,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition on the F5 device you wish to manage. This value is case sensitive, so if the partition name is \"Common\", it must be entered as \"Common\" and not \"common\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Check \"No Password\" if you wish the private key of any added certificate to be set to Key Security Type \"Normal\". Enter a value (either a password or pointer to an installed PAM provider key for the password) to be used to encrypt the private key of any added certificate for Key Security Type of \"Password\".",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "RemoveChain",
        "DisplayName": "Remove Chain on Add",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": false,
        "Description": "Optional setting.  Set this to true if you would like to remove the certificate chain before adding or replacing a certificate on your F5 device."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentication instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": [
      {
        "Name": "SSLProfiles",
        "DisplayName": "SSL Profiles",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "One to many comma delimited F5 SSL Profile names the certificate is bound to"
      }
    ]
  },
  {
    "Name": "F5 WS Profiles REST",
    "ShortName": "F5-WS-REST",
    "Capability": "F5-WS-REST",
    "ServerRequired": true,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "ClientMachineDescription": "The server name or IP Address for the F5 device.",
    "StorePathDescription": "Enter the name of the partition on the F5 device you wish to manage. This value is case sensitive, so if the partition name is \"Common\", it must be entered as \"Common\" and not \"common\",",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "PrimaryNode",
        "DisplayName": "Primary Node",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "",
        "Required": true,
        "Description": "Only required (and shown) if Primary Node Online Required is added and selected.  Enter the Host Name of the F5 device that acts as the primary node in a highly available F5 implementation. Please note that this value IS case sensitive."
      },
      {
        "Name": "PrimaryNodeCheckRetryWaitSecs",
        "DisplayName": "Primary Node Check Retry Wait Seconds",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "120",
        "Required": true,
        "Description": "Enter the number of seconds to wait between attempts to add/replace/renew a certificate if the node is inactive."
      },
      {
        "Name": "PrimaryNodeCheckRetryMax",
        "DisplayName": "Primary Node Check Retry Maximum",
        "Type": "String",
        "DependsOn": "PrimaryNodeOnlineRequired",
        "DefaultValue": "3",
        "Required": true,
        "Description": "Enter the number of times a Management-Add job will attempt to add/replace/renew a certificate if the node is inactive before failing."
      },
      {
        "Name": "PrimaryNodeOnlineRequired",
        "DisplayName": "Primary Node Online Required",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "Description": "Select this if you wish to stop the orchestrator from adding, replacing or renewing certificates on nodes that are inactive. If this is not selected, adding, replacing and renewing certificates on inactive nodes will be allowed. If you choose not to add this custom field, the default value of False will be assumed."
      },
      {
        "Name": "IgnoreSSLWarning",
        "DisplayName": "Ignore SSL Warning",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "False",
        "Required": true,
        "Description": "Select this if you wish to ignore SSL warnings from F5 that occur during API calls when the site does not have a trusted certificate with the proper SAN bound to it. If you choose not to add this custom field, the default value of False will be assumed and SSL warnings will cause errors during orchestrator extension jobs."
      },
      {
        "Name": "UseTokenAuth",
        "DisplayName": "Use Token Authentication",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Select this if you wish to use F5's token authentiation instead of basic authentication for all API requests. If you choose not to add this custom field, the default value of False will be assumed and basic authentication will be used for all API requests for all jobs. Setting this value to True will enable an initial basic authenticated request to acquire an authentication token, which will then be used for all subsequent API requests."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login credential for the F5 device.  MUST be an Admin account."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "IsPAMEligible": true,
        "Required": false,
        "Description": "Login password for the F5 device."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "True if using https to access the F5 device. False if using http."
      }
    ],
    "EntryParameters": []
  },
  {
    "Name": "FortiWeb",
    "ShortName": "FortiWeb",
    "Capability": "FortiWeb",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username for CLI/SSH and REST API access.  Used for inventory. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password for CLI/SSH and REST API access.  Used for inventory.(or valid PAM key if the password is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Should be true, http is not supported."
      },
      {
        "Name": "ADom",
        "DisplayName": "Administrative Domain",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "root",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Specifies the administrative or virtual domain within the FortiWeb system that the API user is targeting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the IP or Domain name and Port Needed for REST API Access.  For SSH Access, Port 22 will be used.",
    "StorePathDescription": "The Store Path field should always be / unless we later determine there are alternate locations needed.",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "Fortigate",
    "ShortName": "Fortigate",
    "Capability": "Fortigate",
    "ServerRequired": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Enter the Fortigate API Token here",
        "IsPAMEligible": true
      }
    },
    "ClientMachineDescription": "The IP address or DNS of the Fortigate server",
    "StorePathDescription": "This is not used in this integration, but is a required field in the UI. Just enter any value here"
  },
  {
    "Name": "GCP Load Balancer",
    "ShortName": "GCPLoadBal",
    "Capability": "GCPLoadBal",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "jsonKey",
        "DisplayName": "Service Account Key",
        "Required": true,
        "IsPAMEligible": false,
        "DependsOn": "",
        "Type": "Secret",
        "DefaultValue": "",
        "Description": "If authenticating by passing credentials from Keyfactor Command, this is the JSON-based service account key created from within Google Cloud.  If authenticating via Application Default Credentials (ADC), select No Value"
      }
    ],
    "ClientMachineDescription": "Not used, but required when creating a store.  Just enter any value.",
    "StorePathDescription": "Your Google Cloud Project ID only if you choose to use global resources.  Append a forward slash '/' and valid GCP region to process against a specific [GCP region](https://gist.github.com/rpkim/084046e02fd8c452ba6ddef3a61d5d59).",
    "EntryParameters": []
  },
  {
    "Name": "Google Cloud Provider Apigee",
    "ShortName": "GcpApigee",
    "Capability": "GcpApigee",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "Properties": [
      {
        "Name": "isTrustStore",
        "DisplayName": "Is Trust Store?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Should be checked if the Apigee keystore being managed is a truststore."
      },
      {
        "Name": "jsonKey",
        "DisplayName": "Google Json Key File",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The JSON key tied to the Apigee service account. You can copy and paste the entire Json key in the textbox when creating a certificate store in the Keyfactor Command UI."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Base URL for the GCP Apigee REST Api. Should be *apigee.googleapis.com*",
    "StorePathDescription": "The Apigee keystore being managed.  Must be provided in the following format: organizations/{org}/environments/{env}/keystores/{keystore}, where {org}, {env}, and {keystore} will be replaced with your environment-specific values."
  },
  {
    "Name": "GCP Certificate Manager",
    "ShortName": "GcpCertMgr",
    "Capability": "GcpCertMgr",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "StorePathType": "",
    "StorePathValue": "n/a",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": false
    },
    "Properties": [
      {
        "Name": "Location",
        "DisplayName": "Location",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "global",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The GCP region used for this Certificate Manager instance.  **global** is the default but could be another region based on the project."
      },
      {
        "Name": "ServiceAccountKey",
        "DisplayName": "Service Account Key File Path",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The file name of the Google Cloud Service Account Key File installed in the same folder as the orchestrator extension. Empty if the orchestrator server resides in GCP and you are not using a service account key."
      }
    ],
    "ClientMachineDescription": "GCP Project ID for your account.",
    "StorePathDescription": "This is not used and should be defaulted to n/a per the certificate store type set up.",
    "EntryParameters": []
  },
  {
    "Name": "Hashicorp Vault Key-Value",
    "ShortName": "HCVKV",
    "Capability": "HCVKV",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultToken",
        "DisplayName": "Vault Token",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "VaultServerUrl",
        "DisplayName": "Vault Server URL",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Cert Chain",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "Hashicorp Vault Key-Value JKS",
    "ShortName": "HCVKVJKS",
    "Capability": "HCVKVJKS",
    "ClientMachineDescription": "This can be any value to help uniquely identify the store.  It is not used by this integration.",
    "StorePathDescription": "This is the path to the secret containing the store.",
    "LocalStore": false,
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The base URI (and port) to the instance of Hashicorp Vault ex: https://localhost:8200"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "Vault token that will be used by the Orchestrator integration for authenticating and performing operations in the Vault instance"
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Description": "Should the certificate chain be included when performing an enrollment?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Description": "The base mount point of the secrets engine.  If using Vault Namespaces, include the namespace; ie. <namespace>/<mount point>",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default",
      "StorePassword": {
        "Description": "Vault token that will be used for authenticating",
        "IsPAMEligible": true
      }
    }
  },
  {
    "Name": "Hashicorp Vault Key-Value PKCS12",
    "ShortName": "HCVKVP12",
    "Capability": "HCVKVP12",
    "ClientMachineDescription": "This can be any value to help uniquely identify the store.  It is not used by this integration.",
    "StorePathDescription": "This is the path to the secret containing the store.",
    "LocalStore": false,
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The base URI (and port) to the instance of Hashicorp Vault ex: https://localhost:8200"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "Vault token that will be used by the Orchestrator integration for authenticating and performing operations in the Vault instance"
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Description": "Should the certificate chain be included when performing an enrollment?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Description": "The base mount point of the secrets engine.  If using Vault Namespaces, include the namespace; ie. <namespace>/<mount point>",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default",
      "StorePassword": {
        "Description": "Vault token that will be used for authenticating",
        "IsPAMEligible": true
      }
    }
  },
  {
    "Name": "Hashicorp Vault Key-Value PEM",
    "ShortName": "HCVKVPEM",
    "Capability": "HCVKVPEM",
    "LocalStore": false,
    "ClientMachineDescription": "This can be any value to help uniquely identify the store.  It is not used by this integration.",
    "StorePathDescription": "This is the path after mount point where the certificates will be stored.",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The base URI (and port) to the instance of Hashicorp Vault ex: https://localhost:8200"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "Vault token that will be used by the Orchestrator integration for authenticating and performing operations in the Vault instance"
      },
      {
        "Name": "SubfolderInventory",
        "DisplayName": "Subfolder Inventory",
        "Description": "Should certificates found in sub-paths be included when performing an inventory?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Description": "Should the certificate chain be included when performing an enrollment?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Description": "The base mount point of the secrets engine.  If using Vault Namespaces, include the namespace; ie. <namespace>/<mount point>",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default",
      "StorePassword": {
        "Description": "Vault token that will be used for authenticating",
        "IsPAMEligible": true
      }
    }
  },
  {
    "Name": "Hashicorp Vault Key-Value PFX",
    "ShortName": "HCVKVPFX",
    "Capability": "HCVKVPFX",
    "ClientMachineDescription": "This can be any value to help uniquely identify the store.  It is not used by this integration.",
    "StorePathDescription": "This is the path to the secret containing the store.",
    "LocalStore": false,
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The base URI (and port) to the instance of Hashicorp Vault ex: https://localhost:8200"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "Vault token that will be used by the Orchestrator integration for authenticating and performing operations in the Vault instance"
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Description": "Should the certificate chain be included when performing an enrollment?",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Description": "The base mount point of the secrets engine.  If using Vault Namespaces, include the namespace; ie. <namespace>/<mount point>",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default",
      "StorePassword": {
        "Description": "Vault token that will be used for authenticating",
        "IsPAMEligible": true
      }
    }
  },
  {
    "Name": "Hashicorp Vault PKI",
    "ShortName": "HCVPKI",
    "Capability": "HCVPKI",
    "LocalStore": false,
    "ClientMachineDescription": "This can be any value to help uniquely identify the store.  It is not used by this integration.",
    "StorePathDescription": "For HCVPKI, this will be '/'",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "PrivateKeyAllowed": "Forbidden",
    "CustomAliasAllowed": "Forbidden",
    "StorePathType": "Fixed",
    "StorePathValue": "/",
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The base URI (and port) to the instance of Hashicorp Vault ex: https://localhost:8200"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "Vault token that will be used by the Orchestrator integration for authenticating and performing operations in the Vault instance"
      },
      {
        "Name": "MountPoint",
        "DisplayName": "Mount Point",
        "Description": "This is the mount point of the instance of the PKI or Keyfactor secrets engine plugin.  If using enterprise namespaces: <namespace>/<mount point>",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default",
      "StorePassword": {
        "Description": "Vault token that will be used for authenticating",
        "IsPAMEligible": true
      }
    }
  },
  {
    "Name": "HP iLO Cert Store",
    "ShortName": "HPiLO",
    "Capability": "HPiLO",
    "LocalStore": false,
    "StorePathDescription": "Path points to the HPiLO instance address, IP or domain name.",
    "ClientMachineDescription": "Runs on a Windows based machine.",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "InventoryAll",
        "DisplayName": "InventoryAll",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Allows for inventory of factory-installed certificates: `Platform Cert`,`SystemIAK`,`SystemIDevID`, `iLOIDevID/BMCIDevIDPCA`"
      },
      {
        "Name": "IgnoreValidation",
        "DisplayName": "IgnoreValidation",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": true,
        "Description": "WARNING: Only enable if testing. Used to disable certificate validation checks at the API endpoint."
      },
      {
        "Name": "HTTPSCertWaitTime",
        "DisplayName": "HTTPS Cert Wait Time",
        "Type": "String",
        "DefaultValue": "60",
        "Required": true,
        "Description": "The HPiLO API requires the user to wait while the HTTPS Cert CSR is generated. HP suggests a time of 60 seconds, as is the default setting, but it can be adjusted."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": true,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "IIS Bound Certificate",
    "ShortName": "IISU",
    "Capability": "IISU",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http,ssh",
        "Required": true,
        "Description": "Multiple choice value specifying which protocol to use.  Protocols https or http use WinRM to connect from Windows to Windows Servers.  Using ssh is only supported when running the orchestrator in a Linux environment."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the Windows target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP.  By default, when using ssh in a Linux environment, the default port number is 22."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server.  When establishing a SSH session from a Linux environment, the password must include the full SSH Private key."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      }
    ],
    "EntryParameters": [
      {
        "Name": "Port",
        "DisplayName": "Port",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "443",
        "Options": "",
        "Description": "String value specifying the IP port to bind the certificate to for the IIS site. Example: '443' for HTTPS."
      },
      {
        "Name": "IPAddress",
        "DisplayName": "IP Address",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "*",
        "Options": "",
        "Description": "String value specifying the IP address to bind the certificate to for the IIS site. Example: '*' for all IP addresses or '192.168.1.1' for a specific IP address."
      },
      {
        "Name": "HostName",
        "DisplayName": "Host Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the host name (host header) to bind the certificate to for the IIS site. Leave blank for all host names or enter a specific hostname such as 'www.example.com'."
      },
      {
        "Name": "SiteName",
        "DisplayName": "IIS Site Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "Default Web Site",
        "Options": "",
        "Description": "String value specifying the name of the IIS web site to bind the certificate to. Example: 'Default Web Site' or any custom site name such as 'MyWebsite'."
      },
      {
        "Name": "SniFlag",
        "DisplayName": "SSL Flags",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "0",
        "Options": "",
        "Description": "A 128-Bit Flag that determines what type of SSL settings you wish to use.  The default is 0, meaning No SNI.  For more information, check IIS documentation for the appropriate bit setting.)"
      },
      {
        "Name": "Protocol",
        "DisplayName": "Protocol",
        "Type": "MultipleChoice",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": true,
          "OnRemove": true,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "https",
        "Options": "https,http",
        "Description": "Multiple choice value specifying the protocol to bind to. Example: 'https' for secure communication."
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing the private keys. If not specified, defaults to 'Microsoft Strong Cryptographic Provider'. This value would typically be specified when leveraging a Hardware Security Module (HSM). The specified cryptographic provider must be available on the target server being managed. The list of installed cryptographic providers can be obtained by running 'certutil -csplist' on the target Server."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs. Can be made optional if RFC 2818 is disabled on the CA."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "[\"My\",\"WebHosting\"]",
    "PrivateKeyAllowed": "Required",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the IIS certificate store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields.  For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Windows certificate store path to manage. Choose 'My' for the Personal store or 'WebHosting' for the Web Hosting store."
  },
  {
    "Name": "Imperva",
    "ShortName": "Imperva",
    "Capability": "Imperva",
    "ServerRequired": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Your Imperva API id and API key concatenated with a comma (,}.  For example: 12345,12345678-1234-1234-1234-123456789ABC.  Please refer to the [Imperva documentation](https://docs.imperva.com/bundle/cloud-application-security/page/settings/api-keys.htm#:~:text=In%20the%20Cloud%20Security%20Console%20top%20menu%20bar%2C%20click%20Account,to%20create%20a%20new%20key.) as to how to create an API id and key.",
        "IsPAMEligible": true
      }
    },
    "Properties": [],
    "EntryParameters": [],
    "ClientMachineDescription": "The URL that will be used as the base URL for Imperva endpoint calls.  Should be https://my.imperva.com",
    "StorePathDescription": "Your Imperva account id.  Please refer to the [Imperva documentation](https://docs.imperva.com/howto/bd68301b) as to how to find your Imperva account id."
  },
  {
    "Name": "K8SCert",
    "ShortName": "K8SCert",
    "Capability": "K8SCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "cert",
        "Required": true
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8SCluster",
    "ShortName": "K8SCluster",
    "Capability": "K8SCluster",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SJKS",
    "ShortName": "K8SJKS",
    "Capability": "K8SJKS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "jks",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".jks",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "PasswordFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SNS",
    "ShortName": "K8SNS",
    "Capability": "K8SNS",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SPKCS12",
    "ShortName": "K8SPKCS12",
    "Capability": "K8SPKCS12",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeSecretType",
        "DisplayName": "Kube Secret Type",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "pkcs12",
        "Required": true
      },
      {
        "Name": "CertificateDataFieldName",
        "DisplayName": "CertificateDataFieldName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": ".p12",
        "Required": true
      },
      {
        "Name": "PasswordFieldName",
        "DisplayName": "Password Field Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "password",
        "Required": false
      },
      {
        "Name": "PasswordIsK8SSecret",
        "DisplayName": "Password Is K8S Secret",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "KubeNamespace",
        "DisplayName": "Kube Namespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "default",
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "Kube Secret Name",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "StorePasswordPath",
        "DisplayName": "StorePasswordPath",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "K8SSecret",
    "ShortName": "K8SSecret",
    "Capability": "K8SSecret",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "K8STLSSecr",
    "ShortName": "K8STLSSecr",
    "Capability": "K8STLSSecr",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "KubeNamespace",
        "DisplayName": "KubeNamespace",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretName",
        "DisplayName": "KubeSecretName",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": null,
        "Required": false
      },
      {
        "Name": "KubeSecretType",
        "DisplayName": "KubeSecretType",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "tls_secret",
        "Required": true
      },
      {
        "Name": "SeparateChain",
        "DisplayName": "Separate Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "false",
        "Required": false
      },
      {
        "Name": "IncludeCertChain",
        "DisplayName": "Include Certificate Chain",
        "Type": "Bool",
        "DefaultValue": "true",
        "Required": false
      }
    ],
    "EntryParameters": null,
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Nmap Orchestrator",
    "ShortName": "Nmap",
    "Capability": "Nmap",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Inventory": true,
      "Reenrollment": false,
      "Remove": true
    },
    "Properties": [],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "Freeform",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Forbidden",
    "ServerRequired": false,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Optional"
  },
  {
    "Name": "PaloAlto",
    "ShortName": "PaloAlto",
    "Capability": "PaloAlto",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "Palo Alto or Panorama Api User. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "Palo Alto or Panorama Api Password. (or valid PAM key if the username is stored in a KF Command configured PAM integration)."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "Should be true, http is not supported."
      },
      {
        "Name": "DeviceGroup",
        "DisplayName": "Device Group",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "A semicolon delimited list of Device Groups that Panorama will push changes to (i.e. 'Group 1', 'Group 1;Group 2', or 'Group 1; Group 2', etc.)."
      },
      {
        "Name": "InventoryTrustedCerts",
        "DisplayName": "Inventory Trusted Certs",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "If false, will not inventory default trusted certs, saves time."
      },
      {
        "Name": "TemplateStack",
        "DisplayName": "Template Stack",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Template stack used for device push of certificates via Template."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "Either the Panorama or Palo Alto Firewall URI or IP address.",
    "StorePathDescription": "The Store Path field should be reviewed in the store path explanation section.  It varies depending on configuration.",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required"
  },
  {
    "Name": "RFDER",
    "ShortName": "RFDER",
    "Capability": "RFDER",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides [config.json](#post-installation) DefaultSudoImpersonatedUser setting."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.der'."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.der) for Windows orchestrated servers. Example: '/folder/path/storename.der' or 'c:\\folder\\path\\storename.der'."
  },
  {
    "Name": "RFJKS",
    "ShortName": "RFJKS",
    "Capability": "RFJKS",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides DefaultSudoImpersonatedUser [config.json](#post-installation) setting."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The IP address or DNS of the server hosting the certificate store.  For more information, see [Client Machine ](#client-machine-instructions)",
    "StorePathDescription": "The full path and file name, including file extension if one exists where the certificate store file is located.  For Linux orchestrated servers, StorePath will begin with a forward slash (i.e. /folder/path/storename.ext).  For Windows orchestrated servers, it should begin with a drive letter (i.e. c:\\folder\\path\\storename.ext)."
  },
  {
    "Name": "RFKDB",
    "ShortName": "RFKDB",
    "Capability": "RFKDB",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides [config.json](#post-installation) DefaultSudoImpersonatedUser setting."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.kdb) for Windows orchestrated servers. Example: '/folder/path/storename.kdb' or 'c:\\folder\\path\\storename.kdb'."
  },
  {
    "Name": "RFORA",
    "ShortName": "RFORA",
    "Capability": "RFORA",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides [config.json](#post-installation) DefaultSudoImpersonatedUser setting."
      },
      {
        "Name": "WorkFolder",
        "DisplayName": "Location to use for creation/removal of work files",
        "Required": true,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The WorkFolder field should contain the path on the managed server where temporary work files can be created, modified, and deleted during Inventory and Management jobs. Example: '/path/to/workfolder'."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name of the Oracle Wallet, including the 'eWallet.p12' file name by convention. Example: '/path/to/eWallet.p12' or 'c:\\path\\to\\eWallet.p12'."
  },
  {
    "Name": "RFPEM",
    "ShortName": "RFPEM",
    "Capability": "RFPEM",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store.  For stores with PKCS#8 private keys, set the password for encrypted private keys (BEGIN ENCRYPTED PRIVATE KEY) or 'No Value' for unencrypted private keys (BEGIN PRIVATE KEY).  If managing a store with a PKCS#1 private key (BEGIN RSA PRIVATE KEY), this value MUST be set to 'No Value'",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides [config.json](#post-installation) DefaultSudoImpersonatedUser setting.."
      },
      {
        "Name": "IsTrustStore",
        "DisplayName": "Trust Store",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IsTrustStore field should contain a boolean value ('true' or 'false') indicating whether the store will be identified as a trust store, which can hold multiple certificates without private keys. Example: 'true' for a trust store or 'false' for a store with a single certificate and private key."
      },
      {
        "Name": "IncludesChain",
        "DisplayName": "Store Includes Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IncludesChain field should contain a boolean value ('true' or 'false') indicating whether the certificate store includes the full certificate chain along with the end entity certificate. Example: 'true' to include the full chain or 'false' to exclude it."
      },
      {
        "Name": "SeparatePrivateKeyFilePath",
        "DisplayName": "Separate Private Key File Location",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SeparatePrivateKeyFilePath field should contain the full path and file name where the separate private key file will be stored if it is to be kept outside the main certificate file. Example: '/path/to/privatekey.pem'."
      },
      {
        "Name": "IgnorePrivateKeyOnInventory",
        "DisplayName": "Ignore Private Key On Inventory",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "false",
        "Description": "The IgnorePrivateKeyOnInventory field should contain a boolean value ('true' or 'false') indicating whether to disregard the private key during inventory. Setting this to 'true' will allow inventory for the store without needing to supply the location of the private key or the password if the key is encrypted.  However, doing this makes the store in effect inventory-only and no management jobs will be able to be run for this store. Example: 'true' to ignore the private key or 'false' to include it."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.ext) for Windows orchestrated servers. Example: '/folder/path/storename.pem' or 'c:\\folder\\path\\storename.pem'."
  },
  {
    "Name": "RFPkcs12",
    "ShortName": "RFPkcs12",
    "Capability": "RFPkcs12",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Optional",
    "SupportedOperations": {
      "Add": true,
      "Create": true,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "PasswordOptions": {
      "Style": "Default",
      "EntrySupported": false,
      "StoreRequired": true,
      "StorePassword": {
        "Description": "Password used to secure the Certificate Store",
        "IsPAMEligible": true
      }
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A username (or valid PAM key if the username is stored in a KF Command configured PAM integration). If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "A password (or valid PAM key if the password is stored in a KF Command configured PAM integration). The password can also be an SSH private key if connecting via SSH to a server using SSH private key authentication. If acting as an *agent* using local file access, just check *No Value*"
      },
      {
        "Name": "LinuxFilePermissionsOnStoreCreation",
        "DisplayName": "Linux File Permissions on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFilePermissionsOnStoreCreation field should contain a three-digit value between 000 and 777 representing the Linux file permissions to be set for the certificate store upon creation. Example: '600' or '755'.  Overrides DefaultLinuxPermissionOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "LinuxFileOwnerOnStoreCreation",
        "DisplayName": "Linux File Owner on Store Creation",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The LinuxFileOwnerOnStoreCreation field should contain a valid user ID recognized by the destination Linux server, optionally followed by a colon and a group ID if the group owner differs. Example: 'userID' or 'userID:groupID'.  Overrides DefaultOwnerOnStoreCreation [config.json](#post-installation) setting."
      },
      {
        "Name": "SudoImpersonatingUser",
        "DisplayName": "Sudo Impersonating User",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "The SudoImpersonatingUser field should contain a valid user ID to impersonate using sudo on the destination Linux server. Example: 'impersonatedUserID'.  Overrides DefaultSudoImpersonatedUser [config.json](#post-installation) setting."
      },
      {
        "Name": "RemoveRootCertificate",
        "DisplayName": "Remove Root Certificate from Chain",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Remove root certificate from chain when adding/renewing a certificate in a store."
      },
      {
        "Name": "IncludePortInSPN",
        "DisplayName": "Include Port in SPN for WinRM",
        "Required": false,
        "DependsOn": "",
        "Type": "Bool",
        "DefaultValue": "False",
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "FileTransferProtocol",
        "DisplayName": "File Transfer Protocol to Use",
        "Required": false,
        "DependsOn": "",
        "Type": "MultipleChoice",
        "DefaultValue": ",SCP,SFTP,Both",
        "Description": "Which protocol should be used when uploading/downloading files - SCP, SFTP, or Both (try one, and then if necessary, the other).  Overrides FileTransferProtocol [config.json](#post-installation) setting."
      },
      {
        "Name": "SSHPort",
        "DisplayName": "SSH Port",
        "Required": false,
        "DependsOn": "",
        "Type": "String",
        "DefaultValue": "",
        "Description": "Integer value representing the port that should be used when connecting to Linux servers over SSH.  Overrides SSHPort [config.json](#post-installation) setting."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The Client Machine field should contain the DNS name or IP address of the remote orchestrated server for Linux orchestrated servers, formatted as a URL (protocol://dns-or-ip:port) for Windows orchestrated servers, or '1.1.1.1|LocalMachine' for local agents. Example: 'https://myserver.mydomain.com:5986' or '1.1.1.1|LocalMachine' for local access.",
    "StorePathDescription": "The Store Path field should contain the full path and file name, including file extension if applicable, beginning with a forward slash (/) for Linux orchestrated servers or a drive letter (i.e., c:\\folder\\path\\storename.p12) for Windows orchestrated servers. Example: '/folder/path/storename.p12' or 'c:\\folder\\path\\storename.p12'."
  },
  {
    "Name": "Signum",
    "ShortName": "Signum",
    "Capability": "Signum",
    "ServerRequired": true,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "PowerShell": false,
    "PrivateKeyAllowed": "Required",
    "SupportedOperations": {
      "Add": false,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The user ID (or PAM key pointing to the user ID) to use with authorization to execute Signum SOAP endpoints in your Signum environment."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The password (or PAM key pointing to the password) for the user ID you entered for Server User Name."
      }
    ],
    "EntryParameters": [],
    "ClientMachineDescription": "The URL that will be used as the base URL for Signum endpoint calls. Should be something like https://{base url for your signum install}/rtadminservice.svc/basic. The API service port can be configured so yours may use something other than default https/443. The '/basic' at the end is required, as this integration makes use of Basic Authentication only when consuming the Signum SOAP API library.",
    "StorePathDescription": "Not used and hardcoded to NA for 'not applicable'",
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    }
  },
  {
    "Name": "VMware-NSX",
    "ShortName": "VMware-NSX",
    "Capability": "VMware-NSX",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The username of the user to log on as in VMware NSX ALB."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The password of the user to log on as in VMware NSX ALB."
      },
      {
        "Name": "ApiVersion",
        "DisplayName": "X-Avi-Version",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "20.1.1",
        "Required": true,
        "IsPAMEligible": false,
        "Description": "The API Version of Avi / NSX to target. A default is set for the version this was originally developed and tested against."
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "MultipleChoice",
    "StorePathValue": "[\"Application\",\"Controller\",\"CA\"]",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "This is the URL for the VMware NSX instance. It also includes an optional tenant in square brackets before the URL. A tenant value is required when the certificates being managed are in a different tenant from the default tenant set for the NSX User specified for the store. This should look like either: [optional-tenant-name]https://my.nsx.url/ OR https://my.nsx.url/ ",
    "StorePathDescription": "A selection from the different certificate types supported: Application, Controller, or CA."
  },
  {
    "Name": "WinCerMgmt",
    "ShortName": "WinCerMgmt",
    "Capability": "WinCerMgmt",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "spnwithport",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathType": "",
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden"
  },
  {
    "Name": "Windows Certificate",
    "ShortName": "WinCert",
    "Capability": "WinCert",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": true,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http,ssh",
        "Required": true,
        "Description": "Multiple choice value specifying which protocol to use.  Protocols https or http use WinRM to connect from Windows to Windows Servers.  Using ssh is only supported when running the orchestrator in a Linux environment."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the Windows target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP.  By default, when using ssh in a Linux environment, the default port number is 22."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server.  When establishing a SSH session from a Linux environment, the password must include the full SSH Private key."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      }
    ],
    "EntryParameters": [
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing the private keys. If not specified, defaults to 'Microsoft Strong Cryptographic Provider'. This value would typically be specified when leveraging a Hardware Security Module (HSM). The specified cryptographic provider must be available on the target server being managed. The list of installed cryptographic providers can be obtained by running 'certutil -csplist' on the target Server."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs. Can be made optional if RFC 2818 is disabled on the CA."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": false,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the certificate store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields. For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Windows certificate store path to manage. The store must exist in the Local Machine store on the target server, e.g., 'My' for the Personal Store or 'Root' for the Trusted Root Certification Authorities Store."
  },
  {
    "Name": "WinSql",
    "ShortName": "WinSql",
    "Capability": "WinSql",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "spnwithport",
        "DisplayName": "SPN With Port",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": false,
        "Description": "Internally set the -IncludePortInSPN option when creating the remote PowerShell connection. Needed for some Kerberos configurations."
      },
      {
        "Name": "WinRM Protocol",
        "DisplayName": "WinRM Protocol",
        "Type": "MultipleChoice",
        "DependsOn": "",
        "DefaultValue": "https,http,ssh",
        "Required": true,
        "Description": "Multiple choice value specifying which protocol to use.  Protocols https or http use WinRM to connect from Windows to Windows Servers.  Using ssh is only supported when running the orchestrator in a Linux environment."
      },
      {
        "Name": "WinRM Port",
        "DisplayName": "WinRM Port",
        "Type": "String",
        "DependsOn": "",
        "DefaultValue": "5986",
        "Required": true,
        "Description": "String value specifying the port number that the Windows target server's WinRM listener is configured to use. Example: '5986' for HTTPS or '5985' for HTTP.  By default, when using ssh in a Linux environment, the default port number is 22."
      },
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Username used to log into the target server for establishing the WinRM session. Example: 'administrator' or 'domain\\username'."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "Description": "Password corresponding to the Server Username used to log into the target server.  When establishing a SSH session from a Linux environment, the password must include the full SSH Private key."
      },
      {
        "Name": "ServerUseSsl",
        "DisplayName": "Use SSL",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "true",
        "Required": true,
        "Description": "Determine whether the server uses SSL or not (This field is automatically created)"
      },
      {
        "Name": "RestartService",
        "DisplayName": "Restart SQL Service After Cert Installed",
        "Type": "Bool",
        "DependsOn": "",
        "DefaultValue": "false",
        "Required": true,
        "Description": "Boolean value (true or false) indicating whether to restart the SQL Server service after installing the certificate. Example: 'true' to enable service restart after installation."
      }
    ],
    "EntryParameters": [
      {
        "Name": "InstanceName",
        "DisplayName": "Instance Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "Description": "String value specifying the SQL Server instance name to bind the certificate to. Example: 'MSSQLServer' for the default instance or 'Instance1' for a named instance."
      },
      {
        "Name": "ProviderName",
        "DisplayName": "Crypto Provider Name",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": false
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "Optional string value specifying the name of the Windows cryptographic provider to use during reenrollment jobs when generating and storing private keys. Example: 'Microsoft Strong Cryptographic Provider'."
      },
      {
        "Name": "SAN",
        "DisplayName": "SAN",
        "Type": "String",
        "RequiredWhen": {
          "HasPrivateKey": false,
          "OnAdd": false,
          "OnRemove": false,
          "OnReenrollment": true
        },
        "DependsOn": "",
        "DefaultValue": "",
        "Options": "",
        "Description": "String value specifying the Subject Alternative Name (SAN) to be used when performing reenrollment jobs. Format as a list of <san_type>=<san_value> entries separated by ampersands; Example: 'dns=www.example.com&dns=www.example2.com' for multiple SANs."
      }
    ],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "StorePathValue": "My",
    "PrivateKeyAllowed": "Optional",
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden",
    "ClientMachineDescription": "Hostname of the Windows Server containing the SQL Server Certificate Store to be managed. If this value is a hostname, a WinRM session will be established using the credentials specified in the Server Username and Server Password fields. For more information, see [Client Machine](#note-regarding-client-machine).",
    "StorePathDescription": "Fixed string value 'My' indicating the Personal store on the Local Machine. This denotes the Windows certificate store to be managed for SQL Server."
  },
  {
    "Name": "F5 WAF CA",
    "ShortName": "f5WafCa",
    "Capability": "f5WafCa",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Not used.  Set to No Value."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": true,
        "Description": "The API Token configured in the F5 Distributed Cloud instance's Account Settings. Please review the Requirements & Prerequisites section in this README for more information on creating this API token."
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Forbidden",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "The URL for the F5 Distributed Cloud instance (typically ending in '.console.ves.volterra.io').",
    "StorePathDescription": "The Multi-Cloud App Connect namespace containing the certificates you wish to manage."
  },
  {
    "Name": "F5 WAF TLS",
    "ShortName": "f5WafTls",
    "Capability": "f5WafTls",
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": true,
      "Enrollment": false,
      "Remove": true
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "Not used.  Set to No Value."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": false,
        "IsPAMEligible": false,
        "Description": "The API Token configured in the F5 Distributed Cloud instance's Account Settings. Please review the Requirements & Prerequisites section in this README for more information on creating this API token."
      }
    ],
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Required",
    "ClientMachineDescription": "The URL for the F5 Distributed Cloud instance (typically ending in '.console.ves.volterra.io').",
    "StorePathDescription": "The Multi-Cloud App Connect namespace containing the certificates you wish to manage."
  },
  {
    "Name": "iDRAC",
    "ShortName": "iDRAC",
    "Capability": "iDRAC",
    "LocalStore": false,
    "SupportedOperations": {
      "Add": true,
      "Create": false,
      "Discovery": false,
      "Enrollment": false,
      "Remove": false
    },
    "Properties": [
      {
        "Name": "ServerUsername",
        "DisplayName": "Server Username",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The user ID (or, if using a PAM provider, the key pointing to the user ID) to log into the iDRAC instance being managed."
      },
      {
        "Name": "ServerPassword",
        "DisplayName": "Server Password",
        "Type": "Secret",
        "DependsOn": "",
        "DefaultValue": "",
        "Required": true,
        "IsPAMEligible": true,
        "Description": "The password (or, if using a PAM provider, the key pointing to the password) for the user ID above."
      }
    ],
    "ClientMachineDescription": "The IP address of the iDRAC instance being managed.",
    "StorePathDescription": "Enter the full path where the Racadm executable is installed on the orchestrator server.  See [Requirements & Prerequisites](#requirements--prerequisites) above for more details.",
    "EntryParameters": [],
    "PasswordOptions": {
      "EntrySupported": false,
      "StoreRequired": false,
      "Style": "Default"
    },
    "PrivateKeyAllowed": "Required",
    "JobProperties": [],
    "ServerRequired": true,
    "PowerShell": false,
    "BlueprintAllowed": true,
    "CustomAliasAllowed": "Forbidden"
  }
]